ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f3xx_it.c **** 
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f3xx_it.c ****  
  36:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f3xx_it.c **** 
  41:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f3xx_it.c **** 
  56:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc1;
  60:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc2;
  61:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc3;
  62:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  65:Src/stm32f3xx_it.c **** 
  66:Src/stm32f3xx_it.c **** /******************************************************************************/
  67:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32f3xx_it.c **** /******************************************************************************/
  69:Src/stm32f3xx_it.c **** /**
  70:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32f3xx_it.c ****   */
  72:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  73:Src/stm32f3xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32f3xx_it.c **** 
  79:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f3xx_it.c **** }
  34              		.loc 1 80 1 view .LVU1
  35 0000 7047     		bx	lr
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 3


  36              		.cfi_endproc
  37              	.LFE126:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB127:
  81:Src/stm32f3xx_it.c **** 
  82:Src/stm32f3xx_it.c **** /**
  83:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f3xx_it.c ****   */
  85:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f3xx_it.c **** {
  49              		.loc 1 86 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  87:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f3xx_it.c **** 
  89:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f3xx_it.c ****   while (1)
  56              		.loc 1 90 3 discriminator 1 view .LVU3
  91:Src/stm32f3xx_it.c ****   {
  92:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f3xx_it.c ****   }
  57              		.loc 1 94 3 discriminator 1 view .LVU4
  90:Src/stm32f3xx_it.c ****   {
  58              		.loc 1 90 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE127:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB128:
  95:Src/stm32f3xx_it.c **** }
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c **** /**
  98:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f3xx_it.c ****   */
 100:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f3xx_it.c **** {
  73              		.loc 1 101 1 view -0
  74              		.cfi_startproc
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 4


  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 102:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f3xx_it.c **** 
 104:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f3xx_it.c ****   while (1)
  80              		.loc 1 105 3 discriminator 1 view .LVU7
 106:Src/stm32f3xx_it.c ****   {
 107:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f3xx_it.c ****   }
  81              		.loc 1 109 3 discriminator 1 view .LVU8
 105:Src/stm32f3xx_it.c ****   {
  82              		.loc 1 105 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE128:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB129:
 110:Src/stm32f3xx_it.c **** }
 111:Src/stm32f3xx_it.c **** 
 112:Src/stm32f3xx_it.c **** /**
 113:Src/stm32f3xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Src/stm32f3xx_it.c ****   */
 115:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f3xx_it.c **** {
  97              		.loc 1 116 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 117:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f3xx_it.c **** 
 119:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f3xx_it.c ****   while (1)
 104              		.loc 1 120 3 discriminator 1 view .LVU11
 121:Src/stm32f3xx_it.c ****   {
 122:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f3xx_it.c ****   }
 105              		.loc 1 124 3 discriminator 1 view .LVU12
 120:Src/stm32f3xx_it.c ****   {
 106              		.loc 1 120 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 5


 109              	.LFE129:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB130:
 125:Src/stm32f3xx_it.c **** }
 126:Src/stm32f3xx_it.c **** 
 127:Src/stm32f3xx_it.c **** /**
 128:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f3xx_it.c ****   */
 130:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f3xx_it.c **** {
 121              		.loc 1 131 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 132:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f3xx_it.c **** 
 134:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 135 3 discriminator 1 view .LVU15
 136:Src/stm32f3xx_it.c ****   {
 137:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****   }
 129              		.loc 1 139 3 discriminator 1 view .LVU16
 135:Src/stm32f3xx_it.c ****   {
 130              		.loc 1 135 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE130:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB131:
 140:Src/stm32f3xx_it.c **** }
 141:Src/stm32f3xx_it.c **** 
 142:Src/stm32f3xx_it.c **** /**
 143:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32f3xx_it.c ****   */
 145:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 146:Src/stm32f3xx_it.c **** {
 145              		.loc 1 146 1 view -0
 146              		.cfi_startproc
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 6


 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 147:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32f3xx_it.c **** 
 149:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32f3xx_it.c **** 
 152:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32f3xx_it.c **** }
 150              		.loc 1 153 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE131:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB132:
 154:Src/stm32f3xx_it.c **** 
 155:Src/stm32f3xx_it.c **** /**
 156:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32f3xx_it.c ****   */
 158:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32f3xx_it.c **** {
 165              		.loc 1 159 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 160:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32f3xx_it.c **** 
 162:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32f3xx_it.c **** 
 165:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32f3xx_it.c **** }
 170              		.loc 1 166 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE132:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB133:
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c **** /**
 169:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 7


 170:Src/stm32f3xx_it.c ****   */
 171:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32f3xx_it.c **** {
 185              		.loc 1 172 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 173:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32f3xx_it.c **** 
 175:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32f3xx_it.c **** 
 178:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32f3xx_it.c **** }
 190              		.loc 1 179 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE133:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB134:
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c **** /**
 182:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32f3xx_it.c ****   */
 184:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32f3xx_it.c **** {
 205              		.loc 1 185 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 186:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32f3xx_it.c **** 
 188:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32f3xx_it.c ****   HAL_IncTick();
 214              		.loc 1 189 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 190:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32f3xx_it.c **** 
 192:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Src/stm32f3xx_it.c **** }
 217              		.loc 1 193 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 8


 220              	.LFE134:
 222              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	EXTI3_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	EXTI3_IRQHandler:
 231              	.LFB135:
 194:Src/stm32f3xx_it.c **** 
 195:Src/stm32f3xx_it.c **** /******************************************************************************/
 196:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 200:Src/stm32f3xx_it.c **** /******************************************************************************/
 201:Src/stm32f3xx_it.c **** 
 202:Src/stm32f3xx_it.c **** /**
 203:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 204:Src/stm32f3xx_it.c ****   */
 205:Src/stm32f3xx_it.c **** void EXTI3_IRQHandler(void)
 206:Src/stm32f3xx_it.c **** {
 232              		.loc 1 206 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 207:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 208:Src/stm32f3xx_it.c **** 
 209:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 210:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 241              		.loc 1 210 3 view .LVU28
 242 0002 0820     		movs	r0, #8
 243 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 244              	.LVL1:
 211:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 212:Src/stm32f3xx_it.c **** 
 213:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 214:Src/stm32f3xx_it.c **** }
 245              		.loc 1 214 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              		.cfi_endproc
 248              	.LFE135:
 250              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	EXTI9_5_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	EXTI9_5_IRQHandler:
 259              	.LFB136:
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 9


 215:Src/stm32f3xx_it.c **** 
 216:Src/stm32f3xx_it.c **** /**
 217:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 218:Src/stm32f3xx_it.c ****   */
 219:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 220:Src/stm32f3xx_it.c **** {
 260              		.loc 1 220 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 221:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 222:Src/stm32f3xx_it.c **** 
 223:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 224:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 269              		.loc 1 224 3 view .LVU31
 270 0002 2020     		movs	r0, #32
 271 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 272              	.LVL2:
 225:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 273              		.loc 1 225 3 view .LVU32
 274 0008 4FF48070 		mov	r0, #256
 275 000c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 276              	.LVL3:
 226:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 277              		.loc 1 226 3 view .LVU33
 278 0010 4FF40070 		mov	r0, #512
 279 0014 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 280              	.LVL4:
 227:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 228:Src/stm32f3xx_it.c **** 
 229:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 230:Src/stm32f3xx_it.c **** }
 281              		.loc 1 230 1 is_stmt 0 view .LVU34
 282 0018 08BD     		pop	{r3, pc}
 283              		.cfi_endproc
 284              	.LFE136:
 286              		.section	.text.DMA2_Channel3_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	DMA2_Channel3_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	DMA2_Channel3_IRQHandler:
 295              	.LFB137:
 231:Src/stm32f3xx_it.c **** 
 232:Src/stm32f3xx_it.c **** /**
 233:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel3 global interrupt.
 234:Src/stm32f3xx_it.c ****   */
 235:Src/stm32f3xx_it.c **** void DMA2_Channel3_IRQHandler(void)
 236:Src/stm32f3xx_it.c **** {
 296              		.loc 1 236 1 is_stmt 1 view -0
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 10


 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 237:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 0 */
 238:Src/stm32f3xx_it.c **** 
 239:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 0 */
 240:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc1);
 305              		.loc 1 240 3 view .LVU36
 306 0002 0248     		ldr	r0, .L21
 307 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 308              	.LVL5:
 241:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 1 */
 242:Src/stm32f3xx_it.c **** 
 243:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 1 */
 244:Src/stm32f3xx_it.c **** }
 309              		.loc 1 244 1 is_stmt 0 view .LVU37
 310 0008 08BD     		pop	{r3, pc}
 311              	.L22:
 312 000a 00BF     		.align	2
 313              	.L21:
 314 000c 00000000 		.word	hdma_sdadc1
 315              		.cfi_endproc
 316              	.LFE137:
 318              		.section	.text.DMA2_Channel4_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	DMA2_Channel4_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	DMA2_Channel4_IRQHandler:
 327              	.LFB138:
 245:Src/stm32f3xx_it.c **** 
 246:Src/stm32f3xx_it.c **** /**
 247:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel4 global interrupt.
 248:Src/stm32f3xx_it.c ****   */
 249:Src/stm32f3xx_it.c **** void DMA2_Channel4_IRQHandler(void)
 250:Src/stm32f3xx_it.c **** {
 328              		.loc 1 250 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 251:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 0 */
 252:Src/stm32f3xx_it.c **** 
 253:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 0 */
 254:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc2);
 337              		.loc 1 254 3 view .LVU39
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 11


 338 0002 0248     		ldr	r0, .L25
 339 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 340              	.LVL6:
 255:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_IRQn 1 */
 256:Src/stm32f3xx_it.c **** 
 257:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel4_IRQn 1 */
 258:Src/stm32f3xx_it.c **** }
 341              		.loc 1 258 1 is_stmt 0 view .LVU40
 342 0008 08BD     		pop	{r3, pc}
 343              	.L26:
 344 000a 00BF     		.align	2
 345              	.L25:
 346 000c 00000000 		.word	hdma_sdadc2
 347              		.cfi_endproc
 348              	.LFE138:
 350              		.section	.text.DMA2_Channel5_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	DMA2_Channel5_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	DMA2_Channel5_IRQHandler:
 359              	.LFB139:
 259:Src/stm32f3xx_it.c **** 
 260:Src/stm32f3xx_it.c **** /**
 261:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel5 global interrupt.
 262:Src/stm32f3xx_it.c ****   */
 263:Src/stm32f3xx_it.c **** void DMA2_Channel5_IRQHandler(void)
 264:Src/stm32f3xx_it.c **** {
 360              		.loc 1 264 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 265:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 0 */
 266:Src/stm32f3xx_it.c **** 
 267:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 0 */
 268:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc3);
 369              		.loc 1 268 3 view .LVU42
 370 0002 0248     		ldr	r0, .L29
 371 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 372              	.LVL7:
 269:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 1 */
 270:Src/stm32f3xx_it.c **** 
 271:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 1 */
 272:Src/stm32f3xx_it.c **** }
 373              		.loc 1 272 1 is_stmt 0 view .LVU43
 374 0008 08BD     		pop	{r3, pc}
 375              	.L30:
 376 000a 00BF     		.align	2
 377              	.L29:
 378 000c 00000000 		.word	hdma_sdadc3
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 12


 379              		.cfi_endproc
 380              	.LFE139:
 382              		.text
 383              	.Letext0:
 384              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/10-2020-q4-major/gcc-arm-none-eabi-10-2020-q4-major/
 385              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/10-2020-q4-major/gcc-arm-none-eabi-10-2020-q4-major/
 386              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 387              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 388              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 389              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 390              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:18     .text.NMI_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:40     .text.HardFault_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:64     .text.MemManage_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:88     .text.BusFault_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:112    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:136    .text.SVC_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:156    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:176    .text.PendSV_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:196    .text.SysTick_Handler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:223    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:230    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:251    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:258    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:287    .text.DMA2_Channel3_IRQHandler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:294    .text.DMA2_Channel3_IRQHandler:0000000000000000 DMA2_Channel3_IRQHandler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:314    .text.DMA2_Channel3_IRQHandler:000000000000000c $d
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:319    .text.DMA2_Channel4_IRQHandler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:326    .text.DMA2_Channel4_IRQHandler:0000000000000000 DMA2_Channel4_IRQHandler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:346    .text.DMA2_Channel4_IRQHandler:000000000000000c $d
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:351    .text.DMA2_Channel5_IRQHandler:0000000000000000 $t
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:358    .text.DMA2_Channel5_IRQHandler:0000000000000000 DMA2_Channel5_IRQHandler
/var/folders/80/65lm4rm97rv_n74c85vt01040000gn/T//cc14kqS8.s:378    .text.DMA2_Channel5_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_sdadc1
hdma_sdadc2
hdma_sdadc3
