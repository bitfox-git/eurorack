ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"kiss_fftr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_dadd
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_d2f
  22              		.section	.text.kiss_fftr_alloc,"ax",%progbits
  23              		.align	1
  24              		.p2align 2,,3
  25              		.global	kiss_fftr_alloc
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	kiss_fftr_alloc:
  32              	.LFB3:
  33              		.file 1 "Src/kiss_fftr.c"
   1:Src/kiss_fftr.c **** /*
   2:Src/kiss_fftr.c ****  *  Copyright (c) 2003-2004, Mark Borgerding. All rights reserved.
   3:Src/kiss_fftr.c ****  *  This file is part of KISS FFT - https://github.com/mborgerding/kissfft
   4:Src/kiss_fftr.c ****  *
   5:Src/kiss_fftr.c ****  *  SPDX-License-Identifier: BSD-3-Clause
   6:Src/kiss_fftr.c ****  *  See COPYING file for more information.
   7:Src/kiss_fftr.c ****  */
   8:Src/kiss_fftr.c **** 
   9:Src/kiss_fftr.c **** #include "kiss_fftr.h"
  10:Src/kiss_fftr.c **** #include "_kiss_fft_guts.h"
  11:Src/kiss_fftr.c **** 
  12:Src/kiss_fftr.c **** struct kiss_fftr_state{
  13:Src/kiss_fftr.c ****     kiss_fft_cfg substate;
  14:Src/kiss_fftr.c ****     kiss_fft_cpx * tmpbuf;
  15:Src/kiss_fftr.c ****     kiss_fft_cpx * super_twiddles;
  16:Src/kiss_fftr.c **** #ifdef USE_SIMD
  17:Src/kiss_fftr.c ****     void * pad;
  18:Src/kiss_fftr.c **** #endif
  19:Src/kiss_fftr.c **** };
  20:Src/kiss_fftr.c **** 
  21:Src/kiss_fftr.c **** kiss_fftr_cfg kiss_fftr_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem)
  22:Src/kiss_fftr.c **** {
  34              		.loc 1 22 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 2


  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 36
  42              		.cfi_offset 4, -36
  43              		.cfi_offset 5, -32
  44              		.cfi_offset 6, -28
  45              		.cfi_offset 7, -24
  46              		.cfi_offset 8, -20
  47              		.cfi_offset 9, -16
  48              		.cfi_offset 10, -12
  49              		.cfi_offset 11, -8
  50              		.cfi_offset 14, -4
  51 0004 2DED028B 		vpush.64	{d8}
  52              	.LCFI1:
  53              		.cfi_def_cfa_offset 44
  54              		.cfi_offset 80, -44
  55              		.cfi_offset 81, -40
  56 0008 85B0     		sub	sp, sp, #20
  57              	.LCFI2:
  58              		.cfi_def_cfa_offset 64
  23:Src/kiss_fftr.c **** 	KISS_FFT_ALIGN_CHECK(mem)
  24:Src/kiss_fftr.c **** 
  25:Src/kiss_fftr.c ****     int i;
  26:Src/kiss_fftr.c ****     kiss_fftr_cfg st = NULL;
  27:Src/kiss_fftr.c ****     size_t subsize = 0, memneeded;
  59              		.loc 1 27 0
  60 000a 0DF11008 		add	r8, sp, #16
  61 000e 4FF0000B 		mov	fp, #0
  62 0012 48F804BD 		str	fp, [r8, #-4]!
  28:Src/kiss_fftr.c **** 
  29:Src/kiss_fftr.c ****     // if (nfft & 1) {
  30:Src/kiss_fftr.c ****     //     fprintf(stderr,"Real FFT optimization must be even.\n");
  31:Src/kiss_fftr.c ****     //     return NULL;
  32:Src/kiss_fftr.c ****     // }
  33:Src/kiss_fftr.c ****     nfft >>= 1;
  63              		.loc 1 33 0
  64 0016 4410     		asrs	r4, r0, #1
  65              	.LVL1:
  22:Src/kiss_fftr.c **** 	KISS_FFT_ALIGN_CHECK(mem)
  66              		.loc 1 22 0
  67 0018 9246     		mov	r10, r2
  68 001a 9946     		mov	r9, r3
  34:Src/kiss_fftr.c **** 
  35:Src/kiss_fftr.c ****     kiss_fft_alloc (nfft, inverse_fft, NULL, &subsize);
  69              		.loc 1 35 0
  70 001c 5A46     		mov	r2, fp
  71              	.LVL2:
  72 001e 4346     		mov	r3, r8
  73              	.LVL3:
  74 0020 2046     		mov	r0, r4
  22:Src/kiss_fftr.c **** 	KISS_FFT_ALIGN_CHECK(mem)
  75              		.loc 1 22 0
  76 0022 0D46     		mov	r5, r1
  77              		.loc 1 35 0
  78 0024 FFF7FEFF 		bl	kiss_fft_alloc
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 3


  79              	.LVL4:
  36:Src/kiss_fftr.c ****     memneeded = sizeof(struct kiss_fftr_state) + subsize + sizeof(kiss_fft_cpx) * ( nfft * 3 / 2);
  80              		.loc 1 36 0
  81 0028 04EB4400 		add	r0, r4, r4, lsl #1
  82 002c 0399     		ldr	r1, [sp, #12]
  83 002e 00EBD070 		add	r0, r0, r0, lsr #31
  84 0032 4010     		asrs	r0, r0, #1
  85 0034 01F10C02 		add	r2, r1, #12
  86 0038 02EBC000 		add	r0, r2, r0, lsl #3
  87              	.LVL5:
  37:Src/kiss_fftr.c **** 
  38:Src/kiss_fftr.c ****     if (lenmem == NULL) {
  88              		.loc 1 38 0
  89 003c B9F1000F 		cmp	r9, #0
  90 0040 00F09380 		beq	.L17
  39:Src/kiss_fftr.c ****         st = (kiss_fftr_cfg) KISS_FFT_MALLOC (memneeded);
  40:Src/kiss_fftr.c ****         // st = (kiss_fftr_cfg) new uint8_t[memneeded];
  41:Src/kiss_fftr.c ****     } else {
  42:Src/kiss_fftr.c ****         if (*lenmem >= memneeded)
  91              		.loc 1 42 0
  92 0044 D9F80020 		ldr	r2, [r9]
  43:Src/kiss_fftr.c ****             st = (kiss_fftr_cfg) mem;
  44:Src/kiss_fftr.c ****         *lenmem = memneeded;
  93              		.loc 1 44 0
  94 0048 C9F80000 		str	r0, [r9]
  42:Src/kiss_fftr.c ****             st = (kiss_fftr_cfg) mem;
  95              		.loc 1 42 0
  96 004c 8242     		cmp	r2, r0
  45:Src/kiss_fftr.c ****     }
  46:Src/kiss_fftr.c ****     if (!st)
  47:Src/kiss_fftr.c ****         return NULL;
  97              		.loc 1 47 0
  98 004e 38BF     		it	cc
  99 0050 DA46     		movcc	r10, fp
 100              	.LVL6:
  42:Src/kiss_fftr.c ****             st = (kiss_fftr_cfg) mem;
 101              		.loc 1 42 0
 102 0052 4CD3     		bcc	.L1
 103              	.LVL7:
 104              	.L3:
  46:Src/kiss_fftr.c ****         return NULL;
 105              		.loc 1 46 0
 106 0054 BAF1000F 		cmp	r10, #0
 107 0058 49D0     		beq	.L1
  48:Src/kiss_fftr.c **** 
  49:Src/kiss_fftr.c ****     st->substate = (kiss_fft_cfg) (st + 1); /*just beyond kiss_fftr_state struct */
 108              		.loc 1 49 0
 109 005a 0AF10C02 		add	r2, r10, #12
  50:Src/kiss_fftr.c ****     st->tmpbuf = (kiss_fft_cpx *) (((char *) st->substate) + subsize);
 110              		.loc 1 50 0
 111 005e 1144     		add	r1, r1, r2
  51:Src/kiss_fftr.c ****     st->super_twiddles = st->tmpbuf + nfft;
 112              		.loc 1 51 0
 113 0060 01EBC400 		add	r0, r1, r4, lsl #3
  52:Src/kiss_fftr.c ****     kiss_fft_alloc(nfft, inverse_fft, st->substate, &subsize);
  53:Src/kiss_fftr.c **** 
  54:Src/kiss_fftr.c ****     for (i = 0; i < nfft/2; ++i) {
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 4


 114              		.loc 1 54 0
 115 0064 04EBD47B 		add	fp, r4, r4, lsr #31
  51:Src/kiss_fftr.c ****     st->super_twiddles = st->tmpbuf + nfft;
 116              		.loc 1 51 0
 117 0068 CAE90110 		strd	r1, r0, [r10, #4]
  52:Src/kiss_fftr.c ****     kiss_fft_alloc(nfft, inverse_fft, st->substate, &subsize);
 118              		.loc 1 52 0
 119 006c 4346     		mov	r3, r8
  49:Src/kiss_fftr.c ****     st->tmpbuf = (kiss_fft_cpx *) (((char *) st->substate) + subsize);
 120              		.loc 1 49 0
 121 006e CAF80020 		str	r2, [r10]
  52:Src/kiss_fftr.c ****     kiss_fft_alloc(nfft, inverse_fft, st->substate, &subsize);
 122              		.loc 1 52 0
 123 0072 2946     		mov	r1, r5
 124 0074 2046     		mov	r0, r4
 125              		.loc 1 54 0
 126 0076 4FEA6B0B 		asr	fp, fp, #1
  52:Src/kiss_fftr.c ****     kiss_fft_alloc(nfft, inverse_fft, st->substate, &subsize);
 127              		.loc 1 52 0
 128 007a FFF7FEFF 		bl	kiss_fft_alloc
 129              	.LVL8:
 130              		.loc 1 54 0
 131 007e BBF1000F 		cmp	fp, #0
 132 0082 34DD     		ble	.L1
 133 0084 2046     		mov	r0, r4
 134 0086 FFF7FEFF 		bl	__aeabi_i2d
 135              	.LVL9:
 136              	.LBB2:
  55:Src/kiss_fftr.c ****         double phase =
  56:Src/kiss_fftr.c ****             -3.14159265358979323846264338327 * ((double) (i+1) / nfft + .5);
  57:Src/kiss_fftr.c ****         if (inverse_fft)
  58:Src/kiss_fftr.c ****             phase *= -1;
  59:Src/kiss_fftr.c ****         kf_cexp (st->super_twiddles+i,phase);
 137              		.loc 1 59 0
 138 008a DAF80840 		ldr	r4, [r10, #8]
 139              	.LVL10:
 140 008e 8046     		mov	r8, r0
 141 0090 8946     		mov	r9, r1
 142              	.LVL11:
 143 0092 95BB     		cbnz	r5, .L6
  55:Src/kiss_fftr.c ****         double phase =
 144              		.loc 1 55 0
 145 0094 38A7     		adr	r7, .L18
 146 0096 D7E90067 		ldrd	r6, [r7]
 147              	.LVL12:
 148              	.L7:
  56:Src/kiss_fftr.c ****         if (inverse_fft)
 149              		.loc 1 56 0
 150 009a 0135     		adds	r5, r5, #1
 151              	.LVL13:
 152 009c 2846     		mov	r0, r5
 153 009e FFF7FEFF 		bl	__aeabi_i2d
 154              	.LVL14:
 155 00a2 4246     		mov	r2, r8
 156 00a4 4B46     		mov	r3, r9
 157 00a6 FFF7FEFF 		bl	__aeabi_ddiv
 158              	.LVL15:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 5


 159 00aa 0022     		movs	r2, #0
 160 00ac 344B     		ldr	r3, .L18+8
 161 00ae FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL16:
  55:Src/kiss_fftr.c ****         double phase =
 163              		.loc 1 55 0
 164 00b2 3246     		mov	r2, r6
 165 00b4 3B46     		mov	r3, r7
 166 00b6 FFF7FEFF 		bl	__aeabi_dmul
 167              	.LVL17:
 168              		.loc 1 59 0
 169 00ba 41EC100B 		vmov	d0, r0, r1
  55:Src/kiss_fftr.c ****         double phase =
 170              		.loc 1 55 0
 171 00be 41EC180B 		vmov	d8, r0, r1
 172              	.LVL18:
 173              		.loc 1 59 0
 174 00c2 FFF7FEFF 		bl	cos
 175              	.LVL19:
 176 00c6 51EC100B 		vmov	r0, r1, d0
 177 00ca FFF7FEFF 		bl	__aeabi_d2f
 178              	.LVL20:
 179 00ce B0EE480A 		vmov.f32	s0, s16
 180 00d2 F0EE680A 		vmov.f32	s1, s17
 181 00d6 2060     		str	r0, [r4]	@ float
 182 00d8 FFF7FEFF 		bl	sin
 183              	.LVL21:
 184 00dc 51EC100B 		vmov	r0, r1, d0
 185 00e0 FFF7FEFF 		bl	__aeabi_d2f
 186              	.LVL22:
 187              	.LBE2:
  54:Src/kiss_fftr.c ****         double phase =
 188              		.loc 1 54 0
 189 00e4 AB45     		cmp	fp, r5
 190              	.LBB3:
 191              		.loc 1 59 0
 192 00e6 6060     		str	r0, [r4, #4]	@ float
 193              	.LVL23:
 194 00e8 04F10804 		add	r4, r4, #8
 195              	.LBE3:
  54:Src/kiss_fftr.c ****         double phase =
 196              		.loc 1 54 0
 197 00ec D5D1     		bne	.L7
 198              	.LVL24:
 199              	.L1:
  60:Src/kiss_fftr.c ****     }
  61:Src/kiss_fftr.c ****     return st;
  62:Src/kiss_fftr.c **** }
 200              		.loc 1 62 0
 201 00ee 5046     		mov	r0, r10
 202 00f0 05B0     		add	sp, sp, #20
 203              	.LCFI3:
 204              		.cfi_remember_state
 205              		.cfi_def_cfa_offset 44
 206              		@ sp needed
 207 00f2 BDEC028B 		vldm	sp!, {d8}
 208              	.LCFI4:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 6


 209              		.cfi_restore 80
 210              		.cfi_restore 81
 211              		.cfi_def_cfa_offset 36
 212 00f6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 213              	.LVL25:
 214              	.L6:
 215              	.LCFI5:
 216              		.cfi_restore_state
  54:Src/kiss_fftr.c ****         double phase =
 217              		.loc 1 54 0
 218 00fa CDE90089 		strd	r8, [sp]
 219 00fe 0025     		movs	r5, #0
 220              	.LVL26:
 221 0100 D946     		mov	r9, fp
 222 0102 D046     		mov	r8, r10
 223              	.LVL27:
 224              	.L9:
 225              	.LBB4:
  56:Src/kiss_fftr.c ****         if (inverse_fft)
 226              		.loc 1 56 0
 227 0104 0135     		adds	r5, r5, #1
 228              	.LVL28:
 229 0106 2846     		mov	r0, r5
 230 0108 FFF7FEFF 		bl	__aeabi_i2d
 231              	.LVL29:
 232 010c DDE90023 		ldrd	r2, [sp]
 233 0110 FFF7FEFF 		bl	__aeabi_ddiv
 234              	.LVL30:
 235 0114 0022     		movs	r2, #0
 236 0116 1A4B     		ldr	r3, .L18+8
 237 0118 FFF7FEFF 		bl	__aeabi_dadd
 238              	.LVL31:
  55:Src/kiss_fftr.c ****             -3.14159265358979323846264338327 * ((double) (i+1) / nfft + .5);
 239              		.loc 1 55 0
 240 011c 16A3     		adr	r3, .L18
 241 011e D3E90023 		ldrd	r2, [r3]
 242 0122 FFF7FEFF 		bl	__aeabi_dmul
 243              	.LVL32:
 244 0126 8246     		mov	r10, r0
 245 0128 8B46     		mov	fp, r1
 246              	.LVL33:
  59:Src/kiss_fftr.c ****     }
 247              		.loc 1 59 0
 248 012a 4BEC10AB 		vmov	d0, r10, fp
 249 012e FFF7FEFF 		bl	cos
 250              	.LVL34:
 251 0132 51EC100B 		vmov	r0, r1, d0
 252 0136 FFF7FEFF 		bl	__aeabi_d2f
 253              	.LVL35:
  58:Src/kiss_fftr.c ****         kf_cexp (st->super_twiddles+i,phase);
 254              		.loc 1 58 0
 255 013a 5646     		mov	r6, r10
 256 013c 0BF10047 		add	r7, fp, #-2147483648
  59:Src/kiss_fftr.c ****     }
 257              		.loc 1 59 0
 258 0140 2060     		str	r0, [r4]	@ float
 259 0142 47EC106B 		vmov	d0, r6, r7
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 7


 260 0146 FFF7FEFF 		bl	sin
 261              	.LVL36:
 262 014a 51EC100B 		vmov	r0, r1, d0
 263 014e FFF7FEFF 		bl	__aeabi_d2f
 264              	.LVL37:
 265              	.LBE4:
  54:Src/kiss_fftr.c ****         double phase =
 266              		.loc 1 54 0
 267 0152 4D45     		cmp	r5, r9
 268              	.LBB5:
  59:Src/kiss_fftr.c ****     }
 269              		.loc 1 59 0
 270 0154 6060     		str	r0, [r4, #4]	@ float
 271              	.LVL38:
 272 0156 04F10804 		add	r4, r4, #8
 273              	.LBE5:
  54:Src/kiss_fftr.c ****         double phase =
 274              		.loc 1 54 0
 275 015a D3D1     		bne	.L9
 276 015c C246     		mov	r10, r8
 277              	.LVL39:
 278              		.loc 1 62 0
 279 015e 5046     		mov	r0, r10
 280 0160 05B0     		add	sp, sp, #20
 281              	.LCFI6:
 282              		.cfi_remember_state
 283              		.cfi_def_cfa_offset 44
 284              		@ sp needed
 285 0162 BDEC028B 		vldm	sp!, {d8}
 286              	.LCFI7:
 287              		.cfi_restore 80
 288              		.cfi_restore 81
 289              		.cfi_def_cfa_offset 36
 290 0166 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 291              	.LVL40:
 292              	.L17:
 293              	.LCFI8:
 294              		.cfi_restore_state
 295 016a 0091     		str	r1, [sp]
  39:Src/kiss_fftr.c ****         // st = (kiss_fftr_cfg) new uint8_t[memneeded];
 296              		.loc 1 39 0
 297 016c FFF7FEFF 		bl	malloc
 298              	.LVL41:
 299 0170 0099     		ldr	r1, [sp]
 300 0172 8246     		mov	r10, r0
 301              	.LVL42:
 302 0174 6EE7     		b	.L3
 303              	.L19:
 304 0176 00BF     		.align	3
 305              	.L18:
 306 0178 182D4454 		.word	1413754136
 307 017c FB2109C0 		.word	-1073143301
 308 0180 0000E03F 		.word	1071644672
 309              		.cfi_endproc
 310              	.LFE3:
 312              		.section	.text.kiss_fftr,"ax",%progbits
 313              		.align	1
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 8


 314              		.p2align 2,,3
 315              		.global	kiss_fftr
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	kiss_fftr:
 322              	.LFB4:
  63:Src/kiss_fftr.c **** 
  64:Src/kiss_fftr.c **** void kiss_fftr(kiss_fftr_cfg st,const kiss_fft_scalar *timedata,kiss_fft_cpx *freqdata)
  65:Src/kiss_fftr.c **** {
 323              		.loc 1 65 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              	.LVL43:
 328 0000 70B5     		push	{r4, r5, r6, lr}
 329              	.LCFI9:
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 4, -16
 332              		.cfi_offset 5, -12
 333              		.cfi_offset 6, -8
 334              		.cfi_offset 14, -4
 335              		.loc 1 65 0
 336 0002 0546     		mov	r5, r0
  66:Src/kiss_fftr.c ****     /* input buffer timedata is stored row-wise */
  67:Src/kiss_fftr.c ****     int k,ncfft;
  68:Src/kiss_fftr.c ****     kiss_fft_cpx fpnk,fpk,f1k,f2k,tw,tdc;
  69:Src/kiss_fftr.c **** 
  70:Src/kiss_fftr.c ****     if ( st->substate->inverse) {
 337              		.loc 1 70 0
 338 0004 0068     		ldr	r0, [r0]
 339              	.LVL44:
 340 0006 4368     		ldr	r3, [r0, #4]
 341 0008 002B     		cmp	r3, #0
 342 000a 62D1     		bne	.L26
 343 000c 1446     		mov	r4, r2
  71:Src/kiss_fftr.c ****         fprintf(stderr,"kiss fft usage error: improper alloc\n");
  72:Src/kiss_fftr.c ****         exit(1);
  73:Src/kiss_fftr.c ****     }
  74:Src/kiss_fftr.c **** 
  75:Src/kiss_fftr.c ****     ncfft = st->substate->nfft;
  76:Src/kiss_fftr.c **** 
  77:Src/kiss_fftr.c ****     /*perform the parallel fft of two real signals packed in real,imag*/
  78:Src/kiss_fftr.c ****     kiss_fft( st->substate , (const kiss_fft_cpx*)timedata, st->tmpbuf );
 344              		.loc 1 78 0
 345 000e 6A68     		ldr	r2, [r5, #4]
 346              	.LVL45:
  75:Src/kiss_fftr.c **** 
 347              		.loc 1 75 0
 348 0010 0668     		ldr	r6, [r0]
 349              	.LVL46:
 350              		.loc 1 78 0
 351 0012 FFF7FEFF 		bl	kiss_fft
 352              	.LVL47:
  79:Src/kiss_fftr.c ****     /* The real part of the DC element of the frequency spectrum in st->tmpbuf
  80:Src/kiss_fftr.c ****      * contains the sum of the even-numbered elements of the input time sequence
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 9


  81:Src/kiss_fftr.c ****      * The imag part is the sum of the odd-numbered elements
  82:Src/kiss_fftr.c ****      *
  83:Src/kiss_fftr.c ****      * The sum of tdc.r and tdc.i is the sum of the input time sequence. 
  84:Src/kiss_fftr.c ****      *      yielding DC of input time sequence
  85:Src/kiss_fftr.c ****      * The difference of tdc.r - tdc.i is the sum of the input (dot product) [1,-1,1,-1... 
  86:Src/kiss_fftr.c ****      *      yielding Nyquist bin of input time sequence
  87:Src/kiss_fftr.c ****      */
  88:Src/kiss_fftr.c ****  
  89:Src/kiss_fftr.c ****     tdc.r = st->tmpbuf[0].r;
 353              		.loc 1 89 0
 354 0016 6B68     		ldr	r3, [r5, #4]
 355 0018 D3ED007A 		vldr.32	s15, [r3]
 356              	.LVL48:
  90:Src/kiss_fftr.c ****     tdc.i = st->tmpbuf[0].i;
 357              		.loc 1 90 0
 358 001c 93ED017A 		vldr.32	s14, [r3, #4]
 359              	.LVL49:
  91:Src/kiss_fftr.c ****     C_FIXDIV(tdc,2);
  92:Src/kiss_fftr.c ****     CHECK_OVERFLOW_OP(tdc.r ,+, tdc.i);
  93:Src/kiss_fftr.c ****     CHECK_OVERFLOW_OP(tdc.r ,-, tdc.i);
  94:Src/kiss_fftr.c ****     freqdata[0].r = tdc.r + tdc.i;
  95:Src/kiss_fftr.c ****     freqdata[ncfft].r = tdc.r - tdc.i;
 360              		.loc 1 95 0
 361 0020 F000     		lsls	r0, r6, #3
  96:Src/kiss_fftr.c **** #ifdef USE_SIMD    
  97:Src/kiss_fftr.c ****     freqdata[ncfft].i = freqdata[0].i = _mm_set1_ps(0);
  98:Src/kiss_fftr.c **** #else
  99:Src/kiss_fftr.c ****     freqdata[ncfft].i = freqdata[0].i = 0;
 100:Src/kiss_fftr.c **** #endif
 101:Src/kiss_fftr.c **** 
 102:Src/kiss_fftr.c ****     for ( k=1;k <= ncfft/2 ; ++k ) {
 362              		.loc 1 102 0
 363 0022 06EBD676 		add	r6, r6, r6, lsr #31
 364              	.LVL50:
  94:Src/kiss_fftr.c ****     freqdata[ncfft].r = tdc.r - tdc.i;
 365              		.loc 1 94 0
 366 0026 77EE876A 		vadd.f32	s13, s15, s14
  95:Src/kiss_fftr.c **** #ifdef USE_SIMD    
 367              		.loc 1 95 0
 368 002a 2118     		adds	r1, r4, r0
 369 002c 77EEC77A 		vsub.f32	s15, s15, s14
 370              	.LVL51:
 371              		.loc 1 102 0
 372 0030 7610     		asrs	r6, r6, #1
  99:Src/kiss_fftr.c **** #endif
 373              		.loc 1 99 0
 374 0032 0022     		movs	r2, #0
 375              		.loc 1 102 0
 376 0034 002E     		cmp	r6, #0
  94:Src/kiss_fftr.c ****     freqdata[ncfft].r = tdc.r - tdc.i;
 377              		.loc 1 94 0
 378 0036 C4ED006A 		vstr.32	s13, [r4]
 379              	.LVL52:
  95:Src/kiss_fftr.c **** #ifdef USE_SIMD    
 380              		.loc 1 95 0
 381 003a C1ED007A 		vstr.32	s15, [r1]
  99:Src/kiss_fftr.c **** #endif
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 10


 382              		.loc 1 99 0
 383 003e 6260     		str	r2, [r4, #4]	@ float
 384 0040 4A60     		str	r2, [r1, #4]	@ float
 385              	.LVL53:
 386              		.loc 1 102 0
 387 0042 45DD     		ble	.L20
 388 0044 AD68     		ldr	r5, [r5, #8]
 389              	.LVL54:
 390 0046 1844     		add	r0, r0, r3
 391 0048 03EBC606 		add	r6, r3, r6, lsl #3
 392 004c 2246     		mov	r2, r4
 103:Src/kiss_fftr.c ****         fpk    = st->tmpbuf[k]; 
 104:Src/kiss_fftr.c ****         fpnk.r =   st->tmpbuf[ncfft-k].r;
 105:Src/kiss_fftr.c ****         fpnk.i = - st->tmpbuf[ncfft-k].i;
 106:Src/kiss_fftr.c ****         C_FIXDIV(fpk,2);
 107:Src/kiss_fftr.c ****         C_FIXDIV(fpnk,2);
 108:Src/kiss_fftr.c **** 
 109:Src/kiss_fftr.c ****         C_ADD( f1k, fpk , fpnk );
 110:Src/kiss_fftr.c ****         C_SUB( f2k, fpk , fpnk );
 111:Src/kiss_fftr.c ****         C_MUL( tw , f2k , st->super_twiddles[k-1]);
 112:Src/kiss_fftr.c **** 
 113:Src/kiss_fftr.c ****         freqdata[k].r = HALF_OF(f1k.r + tw.r);
 393              		.loc 1 113 0
 394 004e F6EE005A 		vmov.f32	s11, #5.0e-1
 395              	.LVL55:
 396              	.L23:
 103:Src/kiss_fftr.c ****         fpk    = st->tmpbuf[k]; 
 397              		.loc 1 103 0 discriminator 3
 398 0052 D3ED036A 		vldr.32	s13, [r3, #12]
 105:Src/kiss_fftr.c ****         C_FIXDIV(fpk,2);
 399              		.loc 1 105 0 discriminator 3
 400 0056 50ED014A 		vldr.32	s9, [r0, #-4]
 103:Src/kiss_fftr.c ****         fpk    = st->tmpbuf[k]; 
 401              		.loc 1 103 0 discriminator 3
 402 005a 93ED025A 		vldr.32	s10, [r3, #8]
 403              	.LVL56:
 111:Src/kiss_fftr.c **** 
 404              		.loc 1 111 0 discriminator 3
 405 005e 95ED014A 		vldr.32	s8, [r5, #4]
 406 0062 95ED003A 		vldr.32	s6, [r5]
 104:Src/kiss_fftr.c ****         fpnk.i = - st->tmpbuf[ncfft-k].i;
 407              		.loc 1 104 0 discriminator 3
 408 0066 10ED027A 		vldr.32	s14, [r0, #-8]
 409              	.LVL57:
 110:Src/kiss_fftr.c ****         C_MUL( tw , f2k , st->super_twiddles[k-1]);
 410              		.loc 1 110 0 discriminator 3
 411 006a 74EEA67A 		vadd.f32	s15, s9, s13
 412 006e 75EE473A 		vsub.f32	s7, s10, s14
 111:Src/kiss_fftr.c **** 
 413              		.loc 1 111 0 discriminator 3
 414 0072 24EE676A 		vnmul.f32	s12, s8, s15
 415 0076 67EE837A 		vmul.f32	s15, s15, s6
 416 007a A3EE836A 		vfma.f32	s12, s7, s6
 417 007e 0833     		adds	r3, r3, #8
 102:Src/kiss_fftr.c ****         fpk    = st->tmpbuf[k]; 
 418              		.loc 1 102 0 discriminator 3
 419 0080 9E42     		cmp	r6, r3
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 11


 111:Src/kiss_fftr.c **** 
 420              		.loc 1 111 0 discriminator 3
 421 0082 E3EE847A 		vfma.f32	s15, s7, s8
 422 0086 05F10805 		add	r5, r5, #8
 423 008a A0F10800 		sub	r0, r0, #8
 424 008e 76EEE46A 		vsub.f32	s13, s13, s9
 425              	.LVL58:
 109:Src/kiss_fftr.c ****         C_SUB( f2k, fpk , fpnk );
 426              		.loc 1 109 0 discriminator 3
 427 0092 37EE057A 		vadd.f32	s14, s14, s10
 428              	.LVL59:
 114:Src/kiss_fftr.c ****         freqdata[k].i = HALF_OF(f1k.i + tw.i);
 429              		.loc 1 114 0 discriminator 3
 430 0096 37EEA65A 		vadd.f32	s10, s15, s13
 431              	.LVL60:
 113:Src/kiss_fftr.c ****         freqdata[k].i = HALF_OF(f1k.i + tw.i);
 432              		.loc 1 113 0 discriminator 3
 433 009a 77EE064A 		vadd.f32	s9, s14, s12
 434              	.LVL61:
 115:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 116:Src/kiss_fftr.c ****         freqdata[ncfft-k].i = HALF_OF(tw.i - f1k.i);
 435              		.loc 1 116 0 discriminator 3
 436 009e 77EEE67A 		vsub.f32	s15, s15, s13
 437              	.LVL62:
 115:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 438              		.loc 1 115 0 discriminator 3
 439 00a2 37EE467A 		vsub.f32	s14, s14, s12
 440              	.LVL63:
 114:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 441              		.loc 1 114 0 discriminator 3
 442 00a6 65EE256A 		vmul.f32	s13, s10, s11
 443              	.LVL64:
 113:Src/kiss_fftr.c ****         freqdata[k].i = HALF_OF(f1k.i + tw.i);
 444              		.loc 1 113 0 discriminator 3
 445 00aa 24EEA56A 		vmul.f32	s12, s9, s11
 446              	.LVL65:
 115:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 447              		.loc 1 115 0 discriminator 3
 448 00ae 27EE257A 		vmul.f32	s14, s14, s11
 449              		.loc 1 116 0 discriminator 3
 450 00b2 67EEA57A 		vmul.f32	s15, s15, s11
 113:Src/kiss_fftr.c ****         freqdata[k].i = HALF_OF(f1k.i + tw.i);
 451              		.loc 1 113 0 discriminator 3
 452 00b6 82ED026A 		vstr.32	s12, [r2, #8]
 453              	.LVL66:
 114:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 454              		.loc 1 114 0 discriminator 3
 455 00ba C2ED036A 		vstr.32	s13, [r2, #12]
 456 00be A1F10801 		sub	r1, r1, #8
 115:Src/kiss_fftr.c ****         freqdata[ncfft-k].r = HALF_OF(f1k.r - tw.r);
 457              		.loc 1 115 0 discriminator 3
 458 00c2 81ED007A 		vstr.32	s14, [r1]
 459              		.loc 1 116 0 discriminator 3
 460 00c6 C1ED017A 		vstr.32	s15, [r1, #4]
 461 00ca 02F10802 		add	r2, r2, #8
 102:Src/kiss_fftr.c ****         fpk    = st->tmpbuf[k]; 
 462              		.loc 1 102 0 discriminator 3
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 12


 463 00ce C0D1     		bne	.L23
 464              	.LVL67:
 465              	.L20:
 117:Src/kiss_fftr.c ****     }
 118:Src/kiss_fftr.c **** }
 466              		.loc 1 118 0
 467 00d0 70BD     		pop	{r4, r5, r6, pc}
 468              	.LVL68:
 469              	.L26:
  71:Src/kiss_fftr.c ****         exit(1);
 470              		.loc 1 71 0
 471 00d2 054B     		ldr	r3, .L27
 472 00d4 0548     		ldr	r0, .L27+4
 473 00d6 1B68     		ldr	r3, [r3]
 474 00d8 2522     		movs	r2, #37
 475              	.LVL69:
 476 00da DB68     		ldr	r3, [r3, #12]
 477 00dc 0121     		movs	r1, #1
 478              	.LVL70:
 479 00de FFF7FEFF 		bl	fwrite
 480              	.LVL71:
  72:Src/kiss_fftr.c ****     }
 481              		.loc 1 72 0
 482 00e2 0120     		movs	r0, #1
 483 00e4 FFF7FEFF 		bl	exit
 484              	.LVL72:
 485              	.L28:
 486              		.align	2
 487              	.L27:
 488 00e8 00000000 		.word	_impure_ptr
 489 00ec 00000000 		.word	.LC0
 490              		.cfi_endproc
 491              	.LFE4:
 493              		.section	.text.kiss_fftri,"ax",%progbits
 494              		.align	1
 495              		.p2align 2,,3
 496              		.global	kiss_fftri
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv4-sp-d16
 502              	kiss_fftri:
 503              	.LFB5:
 119:Src/kiss_fftr.c **** 
 120:Src/kiss_fftr.c **** void kiss_fftri(kiss_fftr_cfg st,const kiss_fft_cpx *freqdata,kiss_fft_scalar *timedata)
 121:Src/kiss_fftr.c **** {
 504              		.loc 1 121 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              	.LVL73:
 509 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 510              	.LCFI10:
 511              		.cfi_def_cfa_offset 24
 512              		.cfi_offset 3, -24
 513              		.cfi_offset 4, -20
 514              		.cfi_offset 5, -16
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 13


 515              		.cfi_offset 6, -12
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518              		.loc 1 121 0
 519 0002 0746     		mov	r7, r0
 122:Src/kiss_fftr.c ****     /* input buffer timedata is stored row-wise */
 123:Src/kiss_fftr.c ****     int k, ncfft;
 124:Src/kiss_fftr.c **** 
 125:Src/kiss_fftr.c ****     if (st->substate->inverse == 0) {
 520              		.loc 1 125 0
 521 0004 0068     		ldr	r0, [r0]
 522              	.LVL74:
 121:Src/kiss_fftr.c ****     /* input buffer timedata is stored row-wise */
 523              		.loc 1 121 0
 524 0006 0B46     		mov	r3, r1
 525              		.loc 1 125 0
 526 0008 4168     		ldr	r1, [r0, #4]
 527              	.LVL75:
 528 000a 0029     		cmp	r1, #0
 529 000c 5CD0     		beq	.L35
 126:Src/kiss_fftr.c ****         fprintf (stderr, "kiss fft usage error: improper alloc\n");
 127:Src/kiss_fftr.c ****         exit (1);
 128:Src/kiss_fftr.c ****     }
 129:Src/kiss_fftr.c **** 
 130:Src/kiss_fftr.c ****     ncfft = st->substate->nfft;
 530              		.loc 1 130 0
 531 000e 0668     		ldr	r6, [r0]
 532              	.LVL76:
 131:Src/kiss_fftr.c **** 
 132:Src/kiss_fftr.c ****     st->tmpbuf[0].r = freqdata[0].r + freqdata[ncfft].r;
 533              		.loc 1 132 0
 534 0010 D3ED007A 		vldr.32	s15, [r3]
 535 0014 7968     		ldr	r1, [r7, #4]
 536 0016 F500     		lsls	r5, r6, #3
 537 0018 5C19     		adds	r4, r3, r5
 538 001a 94ED007A 		vldr.32	s14, [r4]
 539 001e 77EE877A 		vadd.f32	s15, s15, s14
 133:Src/kiss_fftr.c ****     st->tmpbuf[0].i = freqdata[0].r - freqdata[ncfft].r;
 134:Src/kiss_fftr.c ****     C_FIXDIV(st->tmpbuf[0],2);
 135:Src/kiss_fftr.c **** 
 136:Src/kiss_fftr.c ****     for (k = 1; k <= ncfft / 2; ++k) {
 540              		.loc 1 136 0
 541 0022 06EBD67C 		add	ip, r6, r6, lsr #31
 132:Src/kiss_fftr.c ****     st->tmpbuf[0].i = freqdata[0].r - freqdata[ncfft].r;
 542              		.loc 1 132 0
 543 0026 C1ED007A 		vstr.32	s15, [r1]
 133:Src/kiss_fftr.c ****     st->tmpbuf[0].i = freqdata[0].r - freqdata[ncfft].r;
 544              		.loc 1 133 0
 545 002a D3ED007A 		vldr.32	s15, [r3]
 546 002e 94ED007A 		vldr.32	s14, [r4]
 547              		.loc 1 136 0
 548 0032 4FEA6C0C 		asr	ip, ip, #1
 133:Src/kiss_fftr.c ****     st->tmpbuf[0].i = freqdata[0].r - freqdata[ncfft].r;
 549              		.loc 1 133 0
 550 0036 77EEC77A 		vsub.f32	s15, s15, s14
 551              		.loc 1 136 0
 552 003a BCF1000F 		cmp	ip, #0
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 14


 133:Src/kiss_fftr.c ****     st->tmpbuf[0].i = freqdata[0].r - freqdata[ncfft].r;
 553              		.loc 1 133 0
 554 003e C1ED017A 		vstr.32	s15, [r1, #4]
 555              	.LVL77:
 556              		.loc 1 136 0
 557 0042 3DDD     		ble	.L31
 558 0044 BF68     		ldr	r7, [r7, #8]
 559              	.LVL78:
 560 0046 03EBCC0C 		add	ip, r3, ip, lsl #3
 561 004a 0D44     		add	r5, r5, r1
 562 004c 0E46     		mov	r6, r1
 563              	.LVL79:
 564              	.L32:
 565              	.LBB6:
 137:Src/kiss_fftr.c ****         kiss_fft_cpx fk, fnkc, fek, fok, tmp;
 138:Src/kiss_fftr.c ****         fk = freqdata[k];
 566              		.loc 1 138 0 discriminator 3
 567 004e 93ED036A 		vldr.32	s12, [r3, #12]
 139:Src/kiss_fftr.c ****         fnkc.r = freqdata[ncfft - k].r;
 140:Src/kiss_fftr.c ****         fnkc.i = -freqdata[ncfft - k].i;
 568              		.loc 1 140 0 discriminator 3
 569 0052 14ED015A 		vldr.32	s10, [r4, #-4]
 138:Src/kiss_fftr.c ****         fnkc.r = freqdata[ncfft - k].r;
 570              		.loc 1 138 0 discriminator 3
 571 0056 D3ED025A 		vldr.32	s11, [r3, #8]
 572              	.LVL80:
 141:Src/kiss_fftr.c ****         C_FIXDIV( fk , 2 );
 142:Src/kiss_fftr.c ****         C_FIXDIV( fnkc , 2 );
 143:Src/kiss_fftr.c **** 
 144:Src/kiss_fftr.c ****         C_ADD (fek, fk, fnkc);
 145:Src/kiss_fftr.c ****         C_SUB (tmp, fk, fnkc);
 146:Src/kiss_fftr.c ****         C_MUL (fok, tmp, st->super_twiddles[k-1]);
 573              		.loc 1 146 0 discriminator 3
 574 005a D7ED004A 		vldr.32	s9, [r7]
 139:Src/kiss_fftr.c ****         fnkc.i = -freqdata[ncfft - k].i;
 575              		.loc 1 139 0 discriminator 3
 576 005e 54ED027A 		vldr.32	s15, [r4, #-8]
 577              	.LVL81:
 578              		.loc 1 146 0 discriminator 3
 579 0062 D7ED013A 		vldr.32	s7, [r7, #4]
 145:Src/kiss_fftr.c ****         C_MUL (fok, tmp, st->super_twiddles[k-1]);
 580              		.loc 1 145 0 discriminator 3
 581 0066 35EE067A 		vadd.f32	s14, s10, s12
 582 006a 35EEE74A 		vsub.f32	s8, s11, s15
 583              		.loc 1 146 0 discriminator 3
 584 006e 67EE246A 		vmul.f32	s13, s14, s9
 585 0072 23EEC77A 		vnmul.f32	s14, s7, s14
 586 0076 E4EE236A 		vfma.f32	s13, s8, s7
 587 007a 0833     		adds	r3, r3, #8
 588              	.LBE6:
 136:Src/kiss_fftr.c ****         kiss_fft_cpx fk, fnkc, fek, fok, tmp;
 589              		.loc 1 136 0 discriminator 3
 590 007c 9C45     		cmp	ip, r3
 591              	.LBB7:
 592              		.loc 1 146 0 discriminator 3
 593 007e A4EE247A 		vfma.f32	s14, s8, s9
 594 0082 07F10807 		add	r7, r7, #8
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 15


 595 0086 A4F10804 		sub	r4, r4, #8
 596 008a 36EE456A 		vsub.f32	s12, s12, s10
 597              	.LVL82:
 144:Src/kiss_fftr.c ****         C_SUB (tmp, fk, fnkc);
 598              		.loc 1 144 0 discriminator 3
 599 008e 77EEA57A 		vadd.f32	s15, s15, s11
 600              	.LVL83:
 147:Src/kiss_fftr.c ****         C_ADD (st->tmpbuf[k],     fek, fok);
 148:Src/kiss_fftr.c ****         C_SUB (st->tmpbuf[ncfft - k], fek, fok);
 601              		.loc 1 148 0 discriminator 3
 602 0092 76EE665A 		vsub.f32	s11, s12, s13
 603              	.LVL84:
 147:Src/kiss_fftr.c ****         C_ADD (st->tmpbuf[k],     fek, fok);
 604              		.loc 1 147 0 discriminator 3
 605 0096 76EE866A 		vadd.f32	s13, s13, s12
 606              	.LVL85:
 607 009a 37EE876A 		vadd.f32	s12, s15, s14
 608              	.LVL86:
 609              		.loc 1 148 0 discriminator 3
 610 009e 77EEC77A 		vsub.f32	s15, s15, s14
 611              	.LVL87:
 149:Src/kiss_fftr.c **** #ifdef USE_SIMD        
 150:Src/kiss_fftr.c ****         st->tmpbuf[ncfft - k].i *= _mm_set1_ps(-1.0);
 151:Src/kiss_fftr.c **** #else
 152:Src/kiss_fftr.c ****         st->tmpbuf[ncfft - k].i *= -1;
 612              		.loc 1 152 0 discriminator 3
 613 00a2 B1EE657A 		vneg.f32	s14, s11
 614              	.LVL88:
 147:Src/kiss_fftr.c ****         C_ADD (st->tmpbuf[k],     fek, fok);
 615              		.loc 1 147 0 discriminator 3
 616 00a6 C6ED036A 		vstr.32	s13, [r6, #12]
 617              	.LVL89:
 618 00aa 86ED026A 		vstr.32	s12, [r6, #8]
 619 00ae A5F10805 		sub	r5, r5, #8
 620              		.loc 1 152 0 discriminator 3
 621 00b2 85ED017A 		vstr.32	s14, [r5, #4]
 148:Src/kiss_fftr.c **** #ifdef USE_SIMD        
 622              		.loc 1 148 0 discriminator 3
 623 00b6 C5ED007A 		vstr.32	s15, [r5]
 624 00ba 06F10806 		add	r6, r6, #8
 625              	.LBE7:
 136:Src/kiss_fftr.c ****         kiss_fft_cpx fk, fnkc, fek, fok, tmp;
 626              		.loc 1 136 0 discriminator 3
 627 00be C6D1     		bne	.L32
 628              	.LVL90:
 629              	.L31:
 153:Src/kiss_fftr.c **** #endif
 154:Src/kiss_fftr.c ****     }
 155:Src/kiss_fftr.c ****     kiss_fft (st->substate, st->tmpbuf, (kiss_fft_cpx *) timedata);
 156:Src/kiss_fftr.c **** }
 630              		.loc 1 156 0
 631 00c0 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 632              	.LCFI11:
 633              		.cfi_remember_state
 634              		.cfi_restore 14
 635              		.cfi_restore 7
 636              		.cfi_restore 6
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 16


 637              		.cfi_restore 5
 638              		.cfi_restore 4
 639              		.cfi_restore 3
 640              		.cfi_def_cfa_offset 0
 155:Src/kiss_fftr.c **** }
 641              		.loc 1 155 0
 642 00c4 FFF7FEBF 		b	kiss_fft
 643              	.LVL91:
 644              	.L35:
 645              	.LCFI12:
 646              		.cfi_restore_state
 126:Src/kiss_fftr.c ****         exit (1);
 647              		.loc 1 126 0
 648 00c8 054B     		ldr	r3, .L36
 649              	.LVL92:
 650 00ca 0648     		ldr	r0, .L36+4
 651 00cc 1B68     		ldr	r3, [r3]
 652 00ce 2522     		movs	r2, #37
 653              	.LVL93:
 654 00d0 DB68     		ldr	r3, [r3, #12]
 655 00d2 0121     		movs	r1, #1
 656 00d4 FFF7FEFF 		bl	fwrite
 657              	.LVL94:
 127:Src/kiss_fftr.c ****     }
 658              		.loc 1 127 0
 659 00d8 0120     		movs	r0, #1
 660 00da FFF7FEFF 		bl	exit
 661              	.LVL95:
 662              	.L37:
 663 00de 00BF     		.align	2
 664              	.L36:
 665 00e0 00000000 		.word	_impure_ptr
 666 00e4 00000000 		.word	.LC0
 667              		.cfi_endproc
 668              	.LFE5:
 670              		.section	.rodata.kiss_fftr.str1.4,"aMS",%progbits,1
 671              		.align	2
 672              	.LC0:
 673 0000 6B697373 		.ascii	"kiss fft usage error: improper alloc\012\000"
 673      20666674 
 673      20757361 
 673      67652065 
 673      72726F72 
 674              		.text
 675              	.Letext0:
 676              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/incl
 677              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.h
 678              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_types
 679              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent.
 680              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/stdlib.h"
 681              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/math.h"
 682              		.file 8 "Inc/kiss_fft.h"
 683              		.file 9 "Inc/_kiss_fft_guts.h"
 684              		.file 10 "Inc/kiss_fftr.h"
 685              		.file 11 "<built-in>"
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kiss_fftr.c
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:23     .text.kiss_fftr_alloc:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:31     .text.kiss_fftr_alloc:0000000000000000 kiss_fftr_alloc
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:306    .text.kiss_fftr_alloc:0000000000000178 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:313    .text.kiss_fftr:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:321    .text.kiss_fftr:0000000000000000 kiss_fftr
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:488    .text.kiss_fftr:00000000000000e8 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:494    .text.kiss_fftri:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:502    .text.kiss_fftri:0000000000000000 kiss_fftri
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:665    .text.kiss_fftri:00000000000000e0 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccGEg95v.s:671    .rodata.kiss_fftr.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dmul
__aeabi_d2f
kiss_fft_alloc
cos
sin
malloc
kiss_fft
fwrite
exit
_impure_ptr
