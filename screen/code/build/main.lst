ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB127:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "dma.h"
  24:Src/main.c    **** #include "i2c.h"
  25:Src/main.c    **** #include "sdadc.h"
  26:Src/main.c    **** #include "tim.h"
  27:Src/main.c    **** #include "gpio.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** 
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 2


  32:Src/main.c    **** /* USER CODE BEGIN Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** #include "stm32f3xx_hal_sdadc.h"
  35:Src/main.c    **** #include "ssd1306.h"
  36:Src/main.c    **** #include <stdlib.h>
  37:Src/main.c    **** #include <stdint.h>
  38:Src/main.c    **** #include <stdbool.h>
  39:Src/main.c    **** #include "stm32f373xc.h"
  40:Src/main.c    **** // #include "../Drivers/CMSIS/Include/arm_math.h"
  41:Src/main.c    **** // #include "kiss_fft.h"
  42:Src/main.c    **** #include "pitch.h"
  43:Src/main.c    **** #include "stdio.h"
  44:Src/main.c    **** #include "math.h"
  45:Src/main.c    **** // #include "audiodata.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  49:Src/main.c    **** /* USER CODE BEGIN PTD */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PTD */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  54:Src/main.c    **** /* USER CODE BEGIN PD */
  55:Src/main.c    **** #define USE_HAL_SDADC_REGISTER_CALLBACKS
  56:Src/main.c    **** /* USER CODE END PD */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN PM */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PM */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** /* USER CODE BEGIN PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  76:Src/main.c    **** /* USER CODE BEGIN 0 */
  77:Src/main.c    **** float audiobuffer[MAXIMUM_SAMPLESIZE];
  78:Src/main.c    **** uint32_t dmainput[MAXIMUM_SAMPLESIZE];
  79:Src/main.c    **** // kiss_fft_cpx testInput[testsize];
  80:Src/main.c    **** // kiss_fft_cpx testOutput[testsize];
  81:Src/main.c    **** uint8_t floatindex;
  82:Src/main.c    **** bool ready;
  83:Src/main.c    **** /* USER CODE END 0 */
  84:Src/main.c    **** 
  85:Src/main.c    **** /**
  86:Src/main.c    ****   * @brief  The application entry point.
  87:Src/main.c    ****   * @retval int
  88:Src/main.c    ****   */
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 3


  89:Src/main.c    **** int main(void)
  90:Src/main.c    **** {
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 1 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Src/main.c    ****   HAL_Init();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Configure the system clock */
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Initialize all configured peripherals */
 112:Src/main.c    ****   MX_GPIO_Init();
 113:Src/main.c    ****   MX_DMA_Init();
 114:Src/main.c    ****   MX_I2C1_Init();
 115:Src/main.c    ****   MX_SDADC1_Init();
 116:Src/main.c    ****   MX_SDADC2_Init();
 117:Src/main.c    ****   MX_SDADC3_Init();
 118:Src/main.c    ****   MX_TIM4_Init();
 119:Src/main.c    ****   MX_TIM2_Init();
 120:Src/main.c    ****   MX_TIM3_Init();
 121:Src/main.c    ****   MX_TIM13_Init();
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 123:Src/main.c    ****   ssd1306_Init();
 124:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 125:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 126:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_4);
 127:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 128:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 129:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 130:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_4);
 131:Src/main.c    ****   // __HAL_TIM_ENABLE(&htim13);
 132:Src/main.c    ****   __HAL_TIM_ENABLE(&htim4);
 133:Src/main.c    ****   HAL_TIM_PWM_Start_IT(&htim13,TIM_CHANNEL_1);
 134:Src/main.c    **** 
 135:Src/main.c    ****   // HAL_SDADC_ConfigChannel(&hsdadc2,SDADC_CHANNEL_6,SDADC_CONTINUOUS_CONV_ON);
 136:Src/main.c    ****   // HAL_SDADC_ConfigChannel(&hsdadc3,SDADC_CHANNEL_6,SDADC_CONTINUOUS_CONV_ON);
 137:Src/main.c    **** 
 138:Src/main.c    ****   ready = false;
 139:Src/main.c    **** 
 140:Src/main.c    ****   HAL_SDADC_CalibrationStart(&hsdadc1,SDADC_CALIBRATION_SEQ_1);
 141:Src/main.c    ****   HAL_SDADC_PollForCalibEvent(&hsdadc1,HAL_MAX_DELAY);
 142:Src/main.c    ****   // HAL_SDADC_SelectInjectedExtTrigger(&hsdadc1,)
 143:Src/main.c    ****   // HAL_SDADC_InjectedConfigChannel
 144:Src/main.c    ****   // HAL_SDADC_ConfigChannel(&hsdadc1,SDADC_CHANNEL_6,SDADC_CONTINUOUS_CONV_ON);
 145:Src/main.c    ****   // HAL_SDADC_SelectRegularTrigger(&hsdadc1,SDADC_SOFTWARE_TRIGGER);
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 4


 146:Src/main.c    ****   HAL_SDADC_InjectedStart_DMA(&hsdadc1, &dmainput,MAXIMUM_SAMPLESIZE*2);
 147:Src/main.c    **** 
 148:Src/main.c    ****   // uint8_t data = 0;
 149:Src/main.c    ****   // ssd1306_Fill(Black);
 150:Src/main.c    ****   // ssd1306_UpdateScreen();
 151:Src/main.c    ****   // float randommem[4098];
 152:Src/main.c    **** 
 153:Src/main.c    ****   // float dcx = 0;
 154:Src/main.c    ****   // float dcy = 0;
 155:Src/main.c    **** 
 156:Src/main.c    **** 
 157:Src/main.c    ****   // HAL_SDADC_Start(&hsdadc1);
 158:Src/main.c    ****   // HAL_SDADC_PollForConversion(&hsdadc1, HAL_MAX_DELAY);
 159:Src/main.c    ****   // HAL_SDADC_Start_IT()
 160:Src/main.c    ****   /* USER CODE END 2 */
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* Infinite loop */
 163:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 164:Src/main.c    ****   while (1)
 165:Src/main.c    ****   {
 166:Src/main.c    ****     if(ready == true) {
 167:Src/main.c    ****       for (size_t i = 0; i < MAXIMUM_SAMPLESIZE; i++)
 168:Src/main.c    ****       {
 169:Src/main.c    ****         audiobuffer[i] = dmainput[i];
 170:Src/main.c    ****       }
 171:Src/main.c    ****       
 172:Src/main.c    ****       ssd1306_Fill(Black);
 173:Src/main.c    **** 
 174:Src/main.c    ****       // for (size_t i = 0; i < 128; i++)
 175:Src/main.c    ****       // {
 176:Src/main.c    ****       //   ssd1306_DrawPixel(i,audiobuffer[i]*32+32,White);
 177:Src/main.c    ****       // }
 178:Src/main.c    ****       // ssd1306_UpdateScreen();
 179:Src/main.c    ****       // HAL_Delay(200);
 180:Src/main.c    ****       // ssd1306_Fill(Black);
 181:Src/main.c    ****       
 182:Src/main.c    ****       uint32_t inittime = HAL_GetTick();
 183:Src/main.c    ****       float convert = Yin_getPitch(&audiobuffer,MAXIMUM_SAMPLESIZE,0.15,false);
 184:Src/main.c    ****       uint32_t endtime = HAL_GetTick();
 185:Src/main.c    **** 
 186:Src/main.c    **** 
 187:Src/main.c    **** 
 188:Src/main.c    ****       // ssd1306_Fill(Black);
 189:Src/main.c    ****       char charconv[20];
 190:Src/main.c    ****       gcvt(convert, 5, charconv);
 191:Src/main.c    ****       ssd1306_WriteString(charconv, Font_7x10, White,0,0);
 192:Src/main.c    ****     
 193:Src/main.c    ****       // convert = Yin_getProbability();
 194:Src/main.c    ****       // gcvt(convert, 5, charconv);
 195:Src/main.c    ****       // ssd1306_WriteString(charconv, Font_7x10, White,0,21);
 196:Src/main.c    **** 
 197:Src/main.c    ****       volatile int totalcent = log2f(convert/440.0f)*12000.0f;
 198:Src/main.c    ****       
 199:Src/main.c    ****       volatile int notecent = (((totalcent+500) % 12000) + 12000) % 12000;
 200:Src/main.c    **** 
 201:Src/main.c    **** 
 202:Src/main.c    **** 
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 5


 203:Src/main.c    ****       // itoa(centlookup,charconv,10);
 204:Src/main.c    ****       char notenamelookup[12][2] = {"A ","Bb","B ","C ","Db","D ","Eb","E ","F ","Gb","G ","Ab"};
 205:Src/main.c    ****       ssd1306_SetCursor(0,50);
 206:Src/main.c    ****       ssd1306_WriteChar(notenamelookup[notecent/1000][0], Font_7x10, White);
 207:Src/main.c    ****       ssd1306_WriteChar(notenamelookup[notecent/1000][1], Font_7x10, White);
 208:Src/main.c    **** 
 209:Src/main.c    ****       ssd1306_UpdateScreen();
 210:Src/main.c    ****       ready = false;
 211:Src/main.c    ****       // HAL_Delay(200);
 212:Src/main.c    ****       HAL_SDADC_InjectedStart_DMA(&hsdadc1, &dmainput,MAXIMUM_SAMPLESIZE*2);
 213:Src/main.c    ****     }
 214:Src/main.c    **** 
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    ****     // for (int i = 0; i < MAXIMUM_SAMPLESIZE; i++)
 218:Src/main.c    ****     // {
 219:Src/main.c    ****     //   HAL_SDADC_Start(&hsdadc1);
 220:Src/main.c    ****     //   HAL_SDADC_PollForConversion(&hsdadc1,HAL_MAX_DELAY);
 221:Src/main.c    ****     //   int number = (signed short)HAL_SDADC_GetValue(&hsdadc1);
 222:Src/main.c    ****     //   float outputfloat = number / 32768.0f;
 223:Src/main.c    **** 
 224:Src/main.c    ****     //   //DC BLOCKER
 225:Src/main.c    ****     //   float x = outputfloat;
 226:Src/main.c    ****     //   outputfloat = dcy = dcy * 0.995 + x - dcx;
 227:Src/main.c    ****     //   dcx = x;
 228:Src/main.c    **** 
 229:Src/main.c    ****     //   audiobuffer[i] = outputfloat;
 230:Src/main.c    ****     // }
 231:Src/main.c    **** 
 232:Src/main.c    ****     
 233:Src/main.c    **** 
 234:Src/main.c    ****     // // Hardware Test code "_"
 235:Src/main.c    **** 
 236:Src/main.c    ****     // ssd1306_Fill(Black);
 237:Src/main.c    ****     // if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET) {
 238:Src/main.c    ****     // }
 239:Src/main.c    ****     // if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5) == GPIO_PIN_SET) {
 240:Src/main.c    ****     // }
 241:Src/main.c    ****     // if(HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_9) == GPIO_PIN_SET) {
 242:Src/main.c    ****     // }
 243:Src/main.c    **** 
 244:Src/main.c    ****     // data++;
 245:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1,data);
 246:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2,data);
 247:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_3,data);
 248:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_4,data);
 249:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,data);
 250:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_2,data);
 251:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_4,data);
 252:Src/main.c    **** 
 253:Src/main.c    **** 
 254:Src/main.c    **** 
 255:Src/main.c    **** 
 256:Src/main.c    **** 
 257:Src/main.c    ****     
 258:Src/main.c    **** 
 259:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    ****     /* USER CODE BEGIN 3 */
 262:Src/main.c    ****   }
 263:Src/main.c    ****   /* USER CODE END 3 */
 264:Src/main.c    **** }
 265:Src/main.c    **** 
 266:Src/main.c    **** /**
 267:Src/main.c    ****   * @brief System Clock Configuration
 268:Src/main.c    ****   * @retval None
 269:Src/main.c    ****   */
 270:Src/main.c    **** void SystemClock_Config(void)
 271:Src/main.c    **** {
  28              		.loc 1 271 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 104
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 9AB0     		sub	sp, sp, #104
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 120
 272:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 272 0
  43 0004 0024     		movs	r4, #0
  44 0006 1294     		str	r4, [sp, #72]
  45 0008 1394     		str	r4, [sp, #76]
  46 000a 1694     		str	r4, [sp, #88]
 273:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 273 0
  48 000c 0B94     		str	r4, [sp, #44]
  49 000e 0C94     		str	r4, [sp, #48]
  50 0010 0D94     		str	r4, [sp, #52]
  51 0012 0E94     		str	r4, [sp, #56]
  52 0014 0F94     		str	r4, [sp, #60]
 274:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  53              		.loc 1 274 0
  54 0016 2C22     		movs	r2, #44
  55 0018 2146     		mov	r1, r4
  56 001a 6846     		mov	r0, sp
  57 001c FFF7FEFF 		bl	memset
  58              	.LVL0:
 275:Src/main.c    **** 
 276:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 277:Src/main.c    ****   */
 278:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  59              		.loc 1 278 0
  60 0020 0323     		movs	r3, #3
  61 0022 1093     		str	r3, [sp, #64]
 279:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  62              		.loc 1 279 0
  63 0024 4FF48033 		mov	r3, #65536
  64 0028 1193     		str	r3, [sp, #68]
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 7


 280:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 281:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  65              		.loc 1 281 0
  66 002a 0122     		movs	r2, #1
  67 002c 1492     		str	r2, [sp, #80]
 282:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  68              		.loc 1 282 0
  69 002e 1022     		movs	r2, #16
  70 0030 1592     		str	r2, [sp, #84]
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 283 0
  72 0032 0225     		movs	r5, #2
  73 0034 1795     		str	r5, [sp, #92]
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  74              		.loc 1 284 0
  75 0036 1893     		str	r3, [sp, #96]
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  76              		.loc 1 285 0
  77 0038 4FF4E013 		mov	r3, #1835008
  78 003c 1993     		str	r3, [sp, #100]
 286:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 286 0
  80 003e 10A8     		add	r0, sp, #64
  81 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
  82              	.LVL1:
 287:Src/main.c    ****   {
 288:Src/main.c    ****     Error_Handler();
 289:Src/main.c    ****   }
 290:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 291:Src/main.c    ****   */
 292:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  83              		.loc 1 292 0
  84 0044 0F23     		movs	r3, #15
  85 0046 0B93     		str	r3, [sp, #44]
 293:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 294:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  86              		.loc 1 294 0
  87 0048 0C95     		str	r5, [sp, #48]
 295:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  88              		.loc 1 295 0
  89 004a 0D94     		str	r4, [sp, #52]
 296:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  90              		.loc 1 296 0
  91 004c 4FF48066 		mov	r6, #1024
  92 0050 0E96     		str	r6, [sp, #56]
 297:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  93              		.loc 1 297 0
  94 0052 0F94     		str	r4, [sp, #60]
 298:Src/main.c    **** 
 299:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  95              		.loc 1 299 0
  96 0054 2946     		mov	r1, r5
  97 0056 0BA8     		add	r0, sp, #44
  98 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  99              	.LVL2:
 300:Src/main.c    ****   {
 301:Src/main.c    ****     Error_Handler();
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 8


 302:Src/main.c    ****   }
 303:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_SDADC;
 100              		.loc 1 303 0
 101 005c 4FF40263 		mov	r3, #2080
 102 0060 0093     		str	r3, [sp]
 304:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 103              		.loc 1 304 0
 104 0062 0594     		str	r4, [sp, #20]
 305:Src/main.c    ****   PeriphClkInit.SdadcClockSelection = RCC_SDADCSYSCLK_DIV12;
 105              		.loc 1 305 0
 106 0064 4FF02843 		mov	r3, #-1476395008
 107 0068 0893     		str	r3, [sp, #32]
 306:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 108              		.loc 1 306 0
 109 006a 6846     		mov	r0, sp
 110 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 111              	.LVL3:
 307:Src/main.c    ****   {
 308:Src/main.c    ****     Error_Handler();
 309:Src/main.c    ****   }
 310:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG1);
 112              		.loc 1 310 0
 113 0070 4FF40070 		mov	r0, #512
 114 0074 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 115              	.LVL4:
 311:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG2);
 116              		.loc 1 311 0
 117 0078 3046     		mov	r0, r6
 118 007a FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 119              	.LVL5:
 312:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG3);
 120              		.loc 1 312 0
 121 007e 4FF40060 		mov	r0, #2048
 122 0082 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 123              	.LVL6:
 313:Src/main.c    **** }
 124              		.loc 1 313 0
 125 0086 1AB0     		add	sp, sp, #104
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 16
 128              		@ sp needed
 129 0088 70BD     		pop	{r4, r5, r6, pc}
 130              		.cfi_endproc
 131              	.LFE127:
 133              		.global	__aeabi_f2d
 134              		.section	.text.main,"ax",%progbits
 135              		.align	1
 136              		.global	main
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	main:
 143              	.LFB126:
  90:Src/main.c    ****   /* USER CODE BEGIN 1 */
 144              		.loc 1 90 0
 145              		.cfi_startproc
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 9


 146              		@ args = 0, pretend = 0, frame = 56
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 20
 151              		.cfi_offset 4, -20
 152              		.cfi_offset 5, -16
 153              		.cfi_offset 6, -12
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 2DED028B 		vpush.64	{d8}
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 28
 159              		.cfi_offset 80, -28
 160              		.cfi_offset 81, -24
 161 0006 91B0     		sub	sp, sp, #68
 162              	.LCFI5:
 163              		.cfi_def_cfa_offset 96
  98:Src/main.c    **** 
 164              		.loc 1 98 0
 165 0008 FFF7FEFF 		bl	HAL_Init
 166              	.LVL7:
 105:Src/main.c    **** 
 167              		.loc 1 105 0
 168 000c FFF7FEFF 		bl	SystemClock_Config
 169              	.LVL8:
 112:Src/main.c    ****   MX_DMA_Init();
 170              		.loc 1 112 0
 171 0010 FFF7FEFF 		bl	MX_GPIO_Init
 172              	.LVL9:
 113:Src/main.c    ****   MX_I2C1_Init();
 173              		.loc 1 113 0
 174 0014 FFF7FEFF 		bl	MX_DMA_Init
 175              	.LVL10:
 114:Src/main.c    ****   MX_SDADC1_Init();
 176              		.loc 1 114 0
 177 0018 FFF7FEFF 		bl	MX_I2C1_Init
 178              	.LVL11:
 115:Src/main.c    ****   MX_SDADC2_Init();
 179              		.loc 1 115 0
 180 001c FFF7FEFF 		bl	MX_SDADC1_Init
 181              	.LVL12:
 116:Src/main.c    ****   MX_SDADC3_Init();
 182              		.loc 1 116 0
 183 0020 FFF7FEFF 		bl	MX_SDADC2_Init
 184              	.LVL13:
 117:Src/main.c    ****   MX_TIM4_Init();
 185              		.loc 1 117 0
 186 0024 FFF7FEFF 		bl	MX_SDADC3_Init
 187              	.LVL14:
 118:Src/main.c    ****   MX_TIM2_Init();
 188              		.loc 1 118 0
 189 0028 FFF7FEFF 		bl	MX_TIM4_Init
 190              	.LVL15:
 119:Src/main.c    ****   MX_TIM3_Init();
 191              		.loc 1 119 0
 192 002c FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 10


 193              	.LVL16:
 120:Src/main.c    ****   MX_TIM13_Init();
 194              		.loc 1 120 0
 195 0030 FFF7FEFF 		bl	MX_TIM3_Init
 196              	.LVL17:
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 197              		.loc 1 121 0
 198 0034 FFF7FEFF 		bl	MX_TIM13_Init
 199              	.LVL18:
 123:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 200              		.loc 1 123 0
 201 0038 FFF7FEFF 		bl	ssd1306_Init
 202              	.LVL19:
 124:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 203              		.loc 1 124 0
 204 003c 684C     		ldr	r4, .L10
 205 003e 0021     		movs	r1, #0
 206 0040 2046     		mov	r0, r4
 207 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 208              	.LVL20:
 125:Src/main.c    ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_4);
 209              		.loc 1 125 0
 210 0046 0421     		movs	r1, #4
 211 0048 2046     		mov	r0, r4
 212 004a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 213              	.LVL21:
 126:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 214              		.loc 1 126 0
 215 004e 0C21     		movs	r1, #12
 216 0050 2046     		mov	r0, r4
 217 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 218              	.LVL22:
 127:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 219              		.loc 1 127 0
 220 0056 634C     		ldr	r4, .L10+4
 221 0058 0021     		movs	r1, #0
 222 005a 2046     		mov	r0, r4
 223 005c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 224              	.LVL23:
 128:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 225              		.loc 1 128 0
 226 0060 0421     		movs	r1, #4
 227 0062 2046     		mov	r0, r4
 228 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 229              	.LVL24:
 129:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_4);
 230              		.loc 1 129 0
 231 0068 0821     		movs	r1, #8
 232 006a 2046     		mov	r0, r4
 233 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 234              	.LVL25:
 130:Src/main.c    ****   // __HAL_TIM_ENABLE(&htim13);
 235              		.loc 1 130 0
 236 0070 0C21     		movs	r1, #12
 237 0072 2046     		mov	r0, r4
 238 0074 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 239              	.LVL26:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 11


 132:Src/main.c    ****   HAL_TIM_PWM_Start_IT(&htim13,TIM_CHANNEL_1);
 240              		.loc 1 132 0
 241 0078 5B4B     		ldr	r3, .L10+8
 242 007a 1A68     		ldr	r2, [r3]
 243 007c 1368     		ldr	r3, [r2]
 244 007e 43F00103 		orr	r3, r3, #1
 245 0082 1360     		str	r3, [r2]
 133:Src/main.c    **** 
 246              		.loc 1 133 0
 247 0084 0021     		movs	r1, #0
 248 0086 5948     		ldr	r0, .L10+12
 249 0088 FFF7FEFF 		bl	HAL_TIM_PWM_Start_IT
 250              	.LVL27:
 138:Src/main.c    **** 
 251              		.loc 1 138 0
 252 008c 0021     		movs	r1, #0
 253 008e 584B     		ldr	r3, .L10+16
 254 0090 1970     		strb	r1, [r3]
 140:Src/main.c    ****   HAL_SDADC_PollForCalibEvent(&hsdadc1,HAL_MAX_DELAY);
 255              		.loc 1 140 0
 256 0092 584C     		ldr	r4, .L10+20
 257 0094 2046     		mov	r0, r4
 258 0096 FFF7FEFF 		bl	HAL_SDADC_CalibrationStart
 259              	.LVL28:
 141:Src/main.c    ****   // HAL_SDADC_SelectInjectedExtTrigger(&hsdadc1,)
 260              		.loc 1 141 0
 261 009a 4FF0FF31 		mov	r1, #-1
 262 009e 2046     		mov	r0, r4
 263 00a0 FFF7FEFF 		bl	HAL_SDADC_PollForCalibEvent
 264              	.LVL29:
 146:Src/main.c    **** 
 265              		.loc 1 146 0
 266 00a4 4FF40062 		mov	r2, #2048
 267 00a8 5349     		ldr	r1, .L10+24
 268 00aa 2046     		mov	r0, r4
 269 00ac FFF7FEFF 		bl	HAL_SDADC_InjectedStart_DMA
 270              	.LVL30:
 271 00b0 8FE0     		b	.L5
 272              	.LVL31:
 273              	.L6:
 274              	.LBB2:
 275              	.LBB3:
 169:Src/main.c    ****       }
 276              		.loc 1 169 0 discriminator 3
 277 00b2 514A     		ldr	r2, .L10+24
 278 00b4 52F82320 		ldr	r2, [r2, r3, lsl #2]
 279 00b8 07EE902A 		vmov	s15, r2	@ int
 280 00bc 4F4A     		ldr	r2, .L10+28
 281 00be 02EB8302 		add	r2, r2, r3, lsl #2
 282 00c2 F8EE677A 		vcvt.f32.u32	s15, s15
 283 00c6 C2ED007A 		vstr.32	s15, [r2]
 167:Src/main.c    ****       {
 284              		.loc 1 167 0 discriminator 3
 285 00ca 0133     		adds	r3, r3, #1
 286              	.LVL32:
 287              	.L4:
 167:Src/main.c    ****       {
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 12


 288              		.loc 1 167 0 is_stmt 0 discriminator 1
 289 00cc B3F5806F 		cmp	r3, #1024
 290 00d0 EFD3     		bcc	.L6
 291              	.LBE3:
 172:Src/main.c    **** 
 292              		.loc 1 172 0 is_stmt 1
 293 00d2 0020     		movs	r0, #0
 294 00d4 FFF7FEFF 		bl	ssd1306_Fill
 295              	.LVL33:
 182:Src/main.c    ****       float convert = Yin_getPitch(&audiobuffer,MAXIMUM_SAMPLESIZE,0.15,false);
 296              		.loc 1 182 0
 297 00d8 FFF7FEFF 		bl	HAL_GetTick
 298              	.LVL34:
 183:Src/main.c    ****       uint32_t endtime = HAL_GetTick();
 299              		.loc 1 183 0
 300 00dc 0022     		movs	r2, #0
 301 00de 9FED480A 		vldr.32	s0, .L10+32
 302 00e2 4FF48061 		mov	r1, #1024
 303 00e6 4548     		ldr	r0, .L10+28
 304 00e8 FFF7FEFF 		bl	Yin_getPitch
 305              	.LVL35:
 306 00ec B0EE408A 		vmov.f32	s16, s0
 307              	.LVL36:
 184:Src/main.c    **** 
 308              		.loc 1 184 0
 309 00f0 FFF7FEFF 		bl	HAL_GetTick
 310              	.LVL37:
 190:Src/main.c    ****       ssd1306_WriteString(charconv, Font_7x10, White,0,0);
 311              		.loc 1 190 0
 312 00f4 18EE100A 		vmov	r0, s16
 313 00f8 FFF7FEFF 		bl	__aeabi_f2d
 314              	.LVL38:
 315 00fc 41EC100B 		vmov	d0, r0, r1
 316 0100 05A9     		add	r1, sp, #20
 317 0102 0520     		movs	r0, #5
 318 0104 FFF7FEFF 		bl	gcvt
 319              	.LVL39:
 191:Src/main.c    ****     
 320              		.loc 1 191 0
 321 0108 3E4C     		ldr	r4, .L10+36
 322 010a 0025     		movs	r5, #0
 323 010c 0195     		str	r5, [sp, #4]
 324 010e 0095     		str	r5, [sp]
 325 0110 0123     		movs	r3, #1
 326 0112 94E80600 		ldm	r4, {r1, r2}
 327 0116 05A8     		add	r0, sp, #20
 328 0118 FFF7FEFF 		bl	ssd1306_WriteString
 329              	.LVL40:
 197:Src/main.c    ****       
 330              		.loc 1 197 0
 331 011c 9FED3A0A 		vldr.32	s0, .L10+40
 332 0120 88EE000A 		vdiv.f32	s0, s16, s0
 333 0124 FFF7FEFF 		bl	log2f
 334              	.LVL41:
 335 0128 DFED387A 		vldr.32	s15, .L10+44
 336 012c 60EE277A 		vmul.f32	s15, s0, s15
 337 0130 FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 13


 338 0134 CDED037A 		vstr.32	s15, [sp, #12]	@ int
 199:Src/main.c    **** 
 339              		.loc 1 199 0
 340 0138 039A     		ldr	r2, [sp, #12]
 341 013a 02F5FA72 		add	r2, r2, #500
 342 013e 3449     		ldr	r1, .L10+48
 343 0140 81FB0230 		smull	r3, r0, r1, r2
 344 0144 D317     		asrs	r3, r2, #31
 345 0146 C3EB2023 		rsb	r3, r3, r0, asr #8
 346 014a 42F6E060 		movw	r0, #12000
 347 014e 00FB1323 		mls	r3, r0, r3, r2
 348 0152 0344     		add	r3, r3, r0
 349 0154 81FB0321 		smull	r2, r1, r1, r3
 350 0158 DA17     		asrs	r2, r3, #31
 351 015a C2EB2122 		rsb	r2, r2, r1, asr #8
 352 015e 00FB1232 		mls	r2, r0, r2, r3
 353 0162 0492     		str	r2, [sp, #16]
 204:Src/main.c    ****       ssd1306_SetCursor(0,50);
 354              		.loc 1 204 0
 355 0164 0AAE     		add	r6, sp, #40
 356 0166 2B4F     		ldr	r7, .L10+52
 357 0168 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 358 016a 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 359 016c 97E80300 		ldm	r7, {r0, r1}
 360 0170 86E80300 		stm	r6, {r0, r1}
 205:Src/main.c    ****       ssd1306_WriteChar(notenamelookup[notecent/1000][0], Font_7x10, White);
 361              		.loc 1 205 0
 362 0174 3221     		movs	r1, #50
 363 0176 2846     		mov	r0, r5
 364 0178 FFF7FEFF 		bl	ssd1306_SetCursor
 365              	.LVL42:
 206:Src/main.c    ****       ssd1306_WriteChar(notenamelookup[notecent/1000][1], Font_7x10, White);
 366              		.loc 1 206 0
 367 017c 0498     		ldr	r0, [sp, #16]
 368 017e 264E     		ldr	r6, .L10+56
 369 0180 86FB0032 		smull	r3, r2, r6, r0
 370 0184 C017     		asrs	r0, r0, #31
 371 0186 C0EBA210 		rsb	r0, r0, r2, asr #6
 372 018a 10AB     		add	r3, sp, #64
 373 018c 03EB4000 		add	r0, r3, r0, lsl #1
 374 0190 0123     		movs	r3, #1
 375 0192 94E80600 		ldm	r4, {r1, r2}
 376 0196 10F8180C 		ldrb	r0, [r0, #-24]	@ zero_extendqisi2
 377 019a FFF7FEFF 		bl	ssd1306_WriteChar
 378              	.LVL43:
 207:Src/main.c    **** 
 379              		.loc 1 207 0
 380 019e 0498     		ldr	r0, [sp, #16]
 381 01a0 86FB0036 		smull	r3, r6, r6, r0
 382 01a4 C017     		asrs	r0, r0, #31
 383 01a6 C0EBA610 		rsb	r0, r0, r6, asr #6
 384 01aa 10AB     		add	r3, sp, #64
 385 01ac 03EB4000 		add	r0, r3, r0, lsl #1
 386 01b0 0123     		movs	r3, #1
 387 01b2 94E80600 		ldm	r4, {r1, r2}
 388 01b6 10F8170C 		ldrb	r0, [r0, #-23]	@ zero_extendqisi2
 389 01ba FFF7FEFF 		bl	ssd1306_WriteChar
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 14


 390              	.LVL44:
 209:Src/main.c    ****       ready = false;
 391              		.loc 1 209 0
 392 01be FFF7FEFF 		bl	ssd1306_UpdateScreen
 393              	.LVL45:
 210:Src/main.c    ****       // HAL_Delay(200);
 394              		.loc 1 210 0
 395 01c2 0B4B     		ldr	r3, .L10+16
 396 01c4 1D70     		strb	r5, [r3]
 212:Src/main.c    ****     }
 397              		.loc 1 212 0
 398 01c6 4FF40062 		mov	r2, #2048
 399 01ca 0B49     		ldr	r1, .L10+24
 400 01cc 0948     		ldr	r0, .L10+20
 401 01ce FFF7FEFF 		bl	HAL_SDADC_InjectedStart_DMA
 402              	.LVL46:
 403              	.L5:
 404              	.LBE2:
 166:Src/main.c    ****       for (size_t i = 0; i < MAXIMUM_SAMPLESIZE; i++)
 405              		.loc 1 166 0
 406 01d2 074B     		ldr	r3, .L10+16
 407 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 01d6 002B     		cmp	r3, #0
 409 01d8 FBD0     		beq	.L5
 410              	.LBB5:
 411              	.LBB4:
 167:Src/main.c    ****       {
 412              		.loc 1 167 0
 413 01da 0023     		movs	r3, #0
 414 01dc 76E7     		b	.L4
 415              	.L11:
 416 01de 00BF     		.align	2
 417              	.L10:
 418 01e0 00000000 		.word	htim3
 419 01e4 00000000 		.word	htim2
 420 01e8 00000000 		.word	htim4
 421 01ec 00000000 		.word	htim13
 422 01f0 00000000 		.word	ready
 423 01f4 00000000 		.word	hsdadc1
 424 01f8 00000000 		.word	dmainput
 425 01fc 00000000 		.word	audiobuffer
 426 0200 9A99193E 		.word	1041865114
 427 0204 00000000 		.word	Font_7x10
 428 0208 0000DC43 		.word	1138491392
 429 020c 00803B46 		.word	1178304512
 430 0210 F1197605 		.word	91625969
 431 0214 00000000 		.word	.LANCHOR0
 432 0218 D34D6210 		.word	274877907
 433              	.LBE4:
 434              	.LBE5:
 435              		.cfi_endproc
 436              	.LFE126:
 438              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_GPIO_EXTI_Callback
 441              		.syntax unified
 442              		.thumb
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 15


 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	HAL_GPIO_EXTI_Callback:
 447              	.LFB128:
 314:Src/main.c    **** 
 315:Src/main.c    **** /* USER CODE BEGIN 4 */
 316:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 448              		.loc 1 316 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              	.LVL47:
 317:Src/main.c    ****   //
 318:Src/main.c    ****   //
 319:Src/main.c    ****   // NOW WORKS WITH TIMMERSSS
 320:Src/main.c    ****   //
 321:Src/main.c    ****   //
 322:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_RESET);
 323:Src/main.c    ****   // HAL_GPIO_WritePin(GPIOA,GPIO_PIN_4 | GPIO_PIN_6,GPIO_PIN_RESET);
 324:Src/main.c    **** 
 325:Src/main.c    ****   // if(GPIO_Pin == GPIO_PIN_3) {
 326:Src/main.c    ****   //     HAL_GPIO_WritePin(GPIOA,GPIO_PIN_4,GPIO_PIN_SET);
 327:Src/main.c    ****   // }
 328:Src/main.c    ****   // if(GPIO_Pin == GPIO_PIN_5) {
 329:Src/main.c    ****   //     HAL_GPIO_WritePin(GPIOA,GPIO_PIN_6,GPIO_PIN_SET);
 330:Src/main.c    ****   // }
 331:Src/main.c    ****   // if(GPIO_Pin == GPIO_PIN_8) {
 332:Src/main.c    ****   //     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1,GPIO_PIN_SET);
 333:Src/main.c    ****   // }
 334:Src/main.c    **** }
 454              		.loc 1 334 0
 455 0000 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE128:
 459              		.section	.text.HAL_SDADC_InjectedConvCpltCallback,"ax",%progbits
 460              		.align	1
 461              		.global	HAL_SDADC_InjectedConvCpltCallback
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv4-sp-d16
 467              	HAL_SDADC_InjectedConvCpltCallback:
 468              	.LFB129:
 335:Src/main.c    **** 
 336:Src/main.c    **** void HAL_SDADC_InjectedConvCpltCallback(SDADC_HandleTypeDef *hsdadc) {
 469              		.loc 1 336 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL48:
 474 0000 08B5     		push	{r3, lr}
 475              	.LCFI6:
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 3, -8
 478              		.cfi_offset 14, -4
 337:Src/main.c    ****   ready =true;
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 16


 479              		.loc 1 337 0
 480 0002 034B     		ldr	r3, .L15
 481 0004 0122     		movs	r2, #1
 482 0006 1A70     		strb	r2, [r3]
 338:Src/main.c    ****   HAL_SDADC_InjectedStop_DMA(&hsdadc1);   
 483              		.loc 1 338 0
 484 0008 0248     		ldr	r0, .L15+4
 485              	.LVL49:
 486 000a FFF7FEFF 		bl	HAL_SDADC_InjectedStop_DMA
 487              	.LVL50:
 339:Src/main.c    **** }
 488              		.loc 1 339 0
 489 000e 08BD     		pop	{r3, pc}
 490              	.L16:
 491              		.align	2
 492              	.L15:
 493 0010 00000000 		.word	ready
 494 0014 00000000 		.word	hsdadc1
 495              		.cfi_endproc
 496              	.LFE129:
 498              		.section	.text.HAL_SDADC_ConvCpltCallback,"ax",%progbits
 499              		.align	1
 500              		.global	HAL_SDADC_ConvCpltCallback
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv4-sp-d16
 506              	HAL_SDADC_ConvCpltCallback:
 507              	.LFB130:
 340:Src/main.c    **** 
 341:Src/main.c    **** void HAL_SDADC_ConvCpltCallback(SDADC_HandleTypeDef *hsdadc) {
 508              		.loc 1 341 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL51:
 342:Src/main.c    ****   // testInput[floatindex] = HAL_SDADC_GetValue(hsdadc);
 343:Src/main.c    ****   // ready = true;
 344:Src/main.c    ****   // HAL_SDADC_Start_IT(hsdadc);
 345:Src/main.c    **** }
 514              		.loc 1 345 0
 515 0000 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE130:
 519              		.section	.text.HAL_TIM_TriggerCallback,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_TIM_TriggerCallback
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv4-sp-d16
 527              	HAL_TIM_TriggerCallback:
 528              	.LFB131:
 346:Src/main.c    **** 
 347:Src/main.c    **** void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 348:Src/main.c    **** {
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 17


 529              		.loc 1 348 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 534              	.LVL52:
 349:Src/main.c    ****   /* Prevent unused argument(s) compilation warning */
 350:Src/main.c    ****   ready  =false;
 535              		.loc 1 350 0
 536 0000 014B     		ldr	r3, .L19
 537 0002 0022     		movs	r2, #0
 538 0004 1A70     		strb	r2, [r3]
 351:Src/main.c    ****   /* NOTE : This function Should not be modified, when the callback is needed,
 352:Src/main.c    ****             the HAL_TIM_TriggerCallback could be implemented in the user file
 353:Src/main.c    ****    */
 354:Src/main.c    **** }
 539              		.loc 1 354 0
 540 0006 7047     		bx	lr
 541              	.L20:
 542              		.align	2
 543              	.L19:
 544 0008 00000000 		.word	ready
 545              		.cfi_endproc
 546              	.LFE131:
 548              		.section	.text.Error_Handler,"ax",%progbits
 549              		.align	1
 550              		.global	Error_Handler
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	Error_Handler:
 557              	.LFB132:
 355:Src/main.c    **** 
 356:Src/main.c    **** /* USER CODE END 4 */
 357:Src/main.c    **** 
 358:Src/main.c    **** /**
 359:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 360:Src/main.c    ****   * @retval None
 361:Src/main.c    ****   */
 362:Src/main.c    **** void Error_Handler(void)
 363:Src/main.c    **** {
 558              		.loc 1 363 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 364:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 365:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 368:Src/main.c    **** }
 563              		.loc 1 368 0
 564 0000 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE132:
 568              		.comm	ready,1,1
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 18


 569              		.comm	floatindex,1,1
 570              		.comm	dmainput,4096,4
 571              		.comm	audiobuffer,4096,4
 572              		.section	.rodata
 573              		.align	2
 574              		.set	.LANCHOR0,. + 0
 575              	.LC0:
 576 0000 4120     		.ascii	"A "
 577 0002 4262     		.ascii	"Bb"
 578 0004 4220     		.ascii	"B "
 579 0006 4320     		.ascii	"C "
 580 0008 4462     		.ascii	"Db"
 581 000a 4420     		.ascii	"D "
 582 000c 4562     		.ascii	"Eb"
 583 000e 4520     		.ascii	"E "
 584 0010 4620     		.ascii	"F "
 585 0012 4762     		.ascii	"Gb"
 586 0014 4720     		.ascii	"G "
 587 0016 4162     		.ascii	"Ab"
 588              		.text
 589              	.Letext0:
 590              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/machine/_d
 591              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_stdin
 592              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 593              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 594              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 595              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/incl
 596              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.h
 597              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_types
 598              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent
 599              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 600              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 601              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 602              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 603              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 604              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_sdadc.h"
 605              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 606              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 607              		.file 19 "Inc/i2c.h"
 608              		.file 20 "Inc/sdadc.h"
 609              		.file 21 "Inc/tim.h"
 610              		.file 22 "Inc/ips_font.h"
 611              		.file 23 "Inc/ssd1306.h"
 612              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/stdlib.h"
 613              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/math.h"
 614              		.file 26 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pwr_ex.h"
 615              		.file 27 "Inc/pitch.h"
 616              		.file 28 "Inc/gpio.h"
 617              		.file 29 "Inc/dma.h"
 618              		.file 30 "<built-in>"
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:18     .text.SystemClock_Config:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:135    .text.main:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:142    .text.main:0000000000000000 main
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:418    .text.main:00000000000001e0 $d
                            *COM*:0000000000000001 ready
                            *COM*:0000000000001000 dmainput
                            *COM*:0000000000001000 audiobuffer
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:439    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:446    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:460    .text.HAL_SDADC_InjectedConvCpltCallback:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:467    .text.HAL_SDADC_InjectedConvCpltCallback:0000000000000000 HAL_SDADC_InjectedConvCpltCallback
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:493    .text.HAL_SDADC_InjectedConvCpltCallback:0000000000000010 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:499    .text.HAL_SDADC_ConvCpltCallback:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:506    .text.HAL_SDADC_ConvCpltCallback:0000000000000000 HAL_SDADC_ConvCpltCallback
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:520    .text.HAL_TIM_TriggerCallback:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:527    .text.HAL_TIM_TriggerCallback:0000000000000000 HAL_TIM_TriggerCallback
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:544    .text.HAL_TIM_TriggerCallback:0000000000000008 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:549    .text.Error_Handler:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:556    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000001 floatindex
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s:573    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_EnableSDADC
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_SDADC1_Init
MX_SDADC2_Init
MX_SDADC3_Init
MX_TIM4_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM13_Init
ssd1306_Init
HAL_TIM_PWM_Start
HAL_TIM_PWM_Start_IT
HAL_SDADC_CalibrationStart
HAL_SDADC_PollForCalibEvent
HAL_SDADC_InjectedStart_DMA
ssd1306_Fill
HAL_GetTick
Yin_getPitch
gcvt
ssd1306_WriteString
log2f
ssd1306_SetCursor
ssd1306_WriteChar
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccyTMPrR.s 			page 20


ssd1306_UpdateScreen
htim3
htim2
htim4
htim13
hsdadc1
Font_7x10
HAL_SDADC_InjectedStop_DMA
