ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ssd1306.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ssd1306_Reset,"ax",%progbits
  18              		.align	1
  19              		.global	ssd1306_Reset
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ssd1306_Reset:
  26              	.LFB126:
  27              		.file 1 "Src/ssd1306.c"
   1:Src/ssd1306.c **** #include "ssd1306.h"
   2:Src/ssd1306.c **** 
   3:Src/ssd1306.c **** // Screenbuffer
   4:Src/ssd1306.c **** uint8_t SSD1306_Buffer[SSD1306_WIDTH * SSD1306_HEIGHT / 8];
   5:Src/ssd1306.c **** 
   6:Src/ssd1306.c **** // Screen object
   7:Src/ssd1306.c **** SSD1306_t SSD1306;
   8:Src/ssd1306.c **** 
   9:Src/ssd1306.c **** #if defined(SSD1306_USE_I2C)
  10:Src/ssd1306.c **** 
  11:Src/ssd1306.c **** void ssd1306_Reset(void) {
  28              		.loc 1 11 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  12:Src/ssd1306.c **** 	/* for I2C - do nothing */
  13:Src/ssd1306.c **** }
  33              		.loc 1 13 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
  39              		.align	1
  40              		.global	ssd1306_WriteCommand
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	ssd1306_WriteCommand:
  47              	.LFB127:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 2


  14:Src/ssd1306.c **** 
  15:Src/ssd1306.c **** // Send a byte to the command register
  16:Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  48              		.loc 1 16 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL0:
  53 0000 00B5     		push	{lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 4
  56              		.cfi_offset 14, -4
  57 0002 87B0     		sub	sp, sp, #28
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 32
  60 0004 06AA     		add	r2, sp, #24
  61 0006 02F8010D 		strb	r0, [r2, #-1]!
  17:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1,HAL_MAX_DELAY);
  62              		.loc 1 17 0
  63 000a 4FF0FF33 		mov	r3, #-1
  64 000e 0293     		str	r3, [sp, #8]
  65 0010 0123     		movs	r3, #1
  66 0012 0193     		str	r3, [sp, #4]
  67 0014 0092     		str	r2, [sp]
  68 0016 0022     		movs	r2, #0
  69 0018 7821     		movs	r1, #120
  70 001a 0348     		ldr	r0, .L4
  71              	.LVL1:
  72 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
  73              	.LVL2:
  18:Src/ssd1306.c **** }
  74              		.loc 1 18 0
  75 0020 07B0     		add	sp, sp, #28
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 4
  78              		@ sp needed
  79 0022 5DF804FB 		ldr	pc, [sp], #4
  80              	.L5:
  81 0026 00BF     		.align	2
  82              	.L4:
  83 0028 00000000 		.word	hi2c1
  84              		.cfi_endproc
  85              	.LFE127:
  87              		.section	.text.ssd1306_WriteMultipleCommand,"ax",%progbits
  88              		.align	1
  89              		.global	ssd1306_WriteMultipleCommand
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	ssd1306_WriteMultipleCommand:
  96              	.LFB128:
  19:Src/ssd1306.c **** void ssd1306_WriteMultipleCommand(uint8_t *byte, uint16_t size) {
  97              		.loc 1 19 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 3


 101              	.LVL3:
 102 0000 00B5     		push	{lr}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 14, -4
 106 0002 85B0     		sub	sp, sp, #20
 107              	.LCFI4:
 108              		.cfi_def_cfa_offset 24
  20:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, size, byte, 1, HAL_MAX_DELAY);
 109              		.loc 1 20 0
 110 0004 4FF0FF33 		mov	r3, #-1
 111 0008 0293     		str	r3, [sp, #8]
 112 000a 0123     		movs	r3, #1
 113 000c 0193     		str	r3, [sp, #4]
 114 000e 0090     		str	r0, [sp]
 115 0010 0B46     		mov	r3, r1
 116 0012 0022     		movs	r2, #0
 117 0014 7821     		movs	r1, #120
 118              	.LVL4:
 119 0016 0348     		ldr	r0, .L8
 120              	.LVL5:
 121 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 122              	.LVL6:
  21:Src/ssd1306.c **** 
  22:Src/ssd1306.c **** }
 123              		.loc 1 22 0
 124 001c 05B0     		add	sp, sp, #20
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 4
 127              		@ sp needed
 128 001e 5DF804FB 		ldr	pc, [sp], #4
 129              	.L9:
 130 0022 00BF     		.align	2
 131              	.L8:
 132 0024 00000000 		.word	hi2c1
 133              		.cfi_endproc
 134              	.LFE128:
 136              		.section	.text.ssd1306_WriteData,"ax",%progbits
 137              		.align	1
 138              		.global	ssd1306_WriteData
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	ssd1306_WriteData:
 145              	.LFB129:
  23:Src/ssd1306.c **** 
  24:Src/ssd1306.c **** // Send data
  25:Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
 146              		.loc 1 25 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL7:
 151 0000 00B5     		push	{lr}
 152              	.LCFI6:
 153              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 4


 154              		.cfi_offset 14, -4
 155 0002 85B0     		sub	sp, sp, #20
 156              	.LCFI7:
 157              		.cfi_def_cfa_offset 24
  26:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size,HAL_MAX_DELAY);
 158              		.loc 1 26 0
 159 0004 4FF0FF33 		mov	r3, #-1
 160 0008 0293     		str	r3, [sp, #8]
 161 000a 89B2     		uxth	r1, r1
 162              	.LVL8:
 163 000c 0191     		str	r1, [sp, #4]
 164 000e 0090     		str	r0, [sp]
 165 0010 0123     		movs	r3, #1
 166 0012 4022     		movs	r2, #64
 167 0014 7821     		movs	r1, #120
 168 0016 0348     		ldr	r0, .L12
 169              	.LVL9:
 170 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 171              	.LVL10:
  27:Src/ssd1306.c **** }
 172              		.loc 1 27 0
 173 001c 05B0     		add	sp, sp, #20
 174              	.LCFI8:
 175              		.cfi_def_cfa_offset 4
 176              		@ sp needed
 177 001e 5DF804FB 		ldr	pc, [sp], #4
 178              	.L13:
 179 0022 00BF     		.align	2
 180              	.L12:
 181 0024 00000000 		.word	hi2c1
 182              		.cfi_endproc
 183              	.LFE129:
 185              		.section	.text.ssd1306_Fill,"ax",%progbits
 186              		.align	1
 187              		.global	ssd1306_Fill
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	ssd1306_Fill:
 194              	.LFB131:
  28:Src/ssd1306.c **** 
  29:Src/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  30:Src/ssd1306.c **** 
  31:Src/ssd1306.c **** void ssd1306_Reset(void) {
  32:Src/ssd1306.c **** 	// CS = High (not selected)
  33:Src/ssd1306.c **** 	HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
  34:Src/ssd1306.c **** 
  35:Src/ssd1306.c **** 	// Reset the OLED
  36:Src/ssd1306.c **** 	HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  37:Src/ssd1306.c **** 	HAL_Delay(10);
  38:Src/ssd1306.c **** 	HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  39:Src/ssd1306.c **** 	HAL_Delay(10);
  40:Src/ssd1306.c **** }
  41:Src/ssd1306.c **** 
  42:Src/ssd1306.c **** // Send a byte to the command register
  43:Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 5


  44:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  45:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  46:Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  47:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  48:Src/ssd1306.c **** }
  49:Src/ssd1306.c **** 
  50:Src/ssd1306.c **** // Send data
  51:Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  52:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  53:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  54:Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  55:Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  56:Src/ssd1306.c **** }
  57:Src/ssd1306.c **** 
  58:Src/ssd1306.c **** #else
  59:Src/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  60:Src/ssd1306.c **** #endif
  61:Src/ssd1306.c **** 
  62:Src/ssd1306.c **** 
  63:Src/ssd1306.c **** 
  64:Src/ssd1306.c **** 
  65:Src/ssd1306.c **** // Initialize the oled screen
  66:Src/ssd1306.c **** void ssd1306_Init(void) {
  67:Src/ssd1306.c **** 	// Reset OLED
  68:Src/ssd1306.c **** 	ssd1306_Reset();
  69:Src/ssd1306.c **** 
  70:Src/ssd1306.c ****     // Wait for the screen to boot
  71:Src/ssd1306.c ****     HAL_Delay(100);
  72:Src/ssd1306.c ****     
  73:Src/ssd1306.c ****     // Init OLED
  74:Src/ssd1306.c ****     ssd1306_WriteCommand(0xAE); //display off
  75:Src/ssd1306.c **** 
  76:Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
  77:Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
  78:Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
  79:Src/ssd1306.c **** 
  80:Src/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  81:Src/ssd1306.c **** 
  82:Src/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
  83:Src/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
  84:Src/ssd1306.c **** #else
  85:Src/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  86:Src/ssd1306.c **** #endif
  87:Src/ssd1306.c **** 
  88:Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
  89:Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
  90:Src/ssd1306.c **** 
  91:Src/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
  92:Src/ssd1306.c **** 
  93:Src/ssd1306.c ****     ssd1306_WriteCommand(0x81); //--set contrast control register - CHECK
  94:Src/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
  95:Src/ssd1306.c **** 
  96:Src/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
  97:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
  98:Src/ssd1306.c **** #else
  99:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 100:Src/ssd1306.c **** #endif
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 6


 101:Src/ssd1306.c **** 
 102:Src/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 103:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 104:Src/ssd1306.c **** #else
 105:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 106:Src/ssd1306.c **** #endif
 107:Src/ssd1306.c **** 
 108:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 109:Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 110:Src/ssd1306.c **** 
 111:Src/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 112:Src/ssd1306.c **** 
 113:Src/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 114:Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 115:Src/ssd1306.c **** 
 116:Src/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 117:Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 118:Src/ssd1306.c **** 
 119:Src/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 120:Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 121:Src/ssd1306.c **** 
 122:Src/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 123:Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 124:Src/ssd1306.c **** 
 125:Src/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 126:Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //0x20,0.77xVcc
 127:Src/ssd1306.c **** 
 128:Src/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 129:Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 130:Src/ssd1306.c ****     ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 131:Src/ssd1306.c **** 
 132:Src/ssd1306.c ****     // Clear screen
 133:Src/ssd1306.c ****     ssd1306_Fill(Black);
 134:Src/ssd1306.c ****     
 135:Src/ssd1306.c ****     // Flush buffer to screen
 136:Src/ssd1306.c ****     ssd1306_UpdateScreen();
 137:Src/ssd1306.c ****     
 138:Src/ssd1306.c ****     // Set default values for screen object
 139:Src/ssd1306.c ****     SSD1306.CurrentX = 0;
 140:Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 141:Src/ssd1306.c ****     
 142:Src/ssd1306.c ****     SSD1306.Initialized = 1;
 143:Src/ssd1306.c **** }
 144:Src/ssd1306.c **** 
 145:Src/ssd1306.c **** // Fill the whole screen with the given color
 146:Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 195              		.loc 1 146 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL11:
 147:Src/ssd1306.c ****     /* Set memory */
 148:Src/ssd1306.c ****     uint32_t i;
 149:Src/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 201              		.loc 1 149 0
 202 0000 0023     		movs	r3, #0
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 7


 203 0002 03E0     		b	.L15
 204              	.LVL12:
 205              	.L18:
 150:Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 206              		.loc 1 150 0
 207 0004 FF21     		movs	r1, #255
 208              	.L16:
 209              		.loc 1 150 0 is_stmt 0 discriminator 4
 210 0006 054A     		ldr	r2, .L20
 211 0008 D154     		strb	r1, [r2, r3]
 149:Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 212              		.loc 1 149 0 is_stmt 1 discriminator 4
 213 000a 0133     		adds	r3, r3, #1
 214              	.LVL13:
 215              	.L15:
 149:Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 216              		.loc 1 149 0 is_stmt 0 discriminator 2
 217 000c B3F5806F 		cmp	r3, #1024
 218 0010 03D2     		bcs	.L19
 219              		.loc 1 150 0 is_stmt 1
 220 0012 0028     		cmp	r0, #0
 221 0014 F6D1     		bne	.L18
 222 0016 0021     		movs	r1, #0
 223 0018 F5E7     		b	.L16
 224              	.L19:
 151:Src/ssd1306.c ****     }
 152:Src/ssd1306.c **** }
 225              		.loc 1 152 0
 226 001a 7047     		bx	lr
 227              	.L21:
 228              		.align	2
 229              	.L20:
 230 001c 00000000 		.word	SSD1306_Buffer
 231              		.cfi_endproc
 232              	.LFE131:
 234              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 235              		.align	1
 236              		.global	ssd1306_UpdateScreen
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	ssd1306_UpdateScreen:
 243              	.LFB132:
 153:Src/ssd1306.c **** 
 154:Src/ssd1306.c **** // Write the screenbuffer with changed to the screen
 155:Src/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 244              		.loc 1 155 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
 249              	.LCFI9:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 253              	.LVL14:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 8


 156:Src/ssd1306.c ****     uint8_t i;
 157:Src/ssd1306.c ****     for(i = 0; i < 8; i++) {
 254              		.loc 1 157 0
 255 0002 0024     		movs	r4, #0
 256 0004 12E0     		b	.L23
 257              	.LVL15:
 258              	.L24:
 259              	.LBB2:
 158:Src/ssd1306.c ****         uint8_t cmds[] = {0xB0 + i, 0x00, 0x10};
 260              		.loc 1 158 0 discriminator 3
 261 0006 A4F15000 		sub	r0, r4, #80
 159:Src/ssd1306.c ****         ssd1306_WriteCommand(cmds[0]);
 262              		.loc 1 159 0 discriminator 3
 263 000a C0B2     		uxtb	r0, r0
 264 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 265              	.LVL16:
 160:Src/ssd1306.c ****         ssd1306_WriteCommand(cmds[1]);
 266              		.loc 1 160 0 discriminator 3
 267 0010 0020     		movs	r0, #0
 268 0012 FFF7FEFF 		bl	ssd1306_WriteCommand
 269              	.LVL17:
 161:Src/ssd1306.c ****         ssd1306_WriteCommand(cmds[2]);
 270              		.loc 1 161 0 discriminator 3
 271 0016 1020     		movs	r0, #16
 272 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 273              	.LVL18:
 162:Src/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 274              		.loc 1 162 0 discriminator 3
 275 001c 8021     		movs	r1, #128
 276 001e 0548     		ldr	r0, .L26
 277 0020 00EBC410 		add	r0, r0, r4, lsl #7
 278 0024 FFF7FEFF 		bl	ssd1306_WriteData
 279              	.LVL19:
 280              	.LBE2:
 157:Src/ssd1306.c ****         uint8_t cmds[] = {0xB0 + i, 0x00, 0x10};
 281              		.loc 1 157 0 discriminator 3
 282 0028 0134     		adds	r4, r4, #1
 283              	.LVL20:
 284 002a E4B2     		uxtb	r4, r4
 285              	.LVL21:
 286              	.L23:
 157:Src/ssd1306.c ****         uint8_t cmds[] = {0xB0 + i, 0x00, 0x10};
 287              		.loc 1 157 0 is_stmt 0 discriminator 1
 288 002c 072C     		cmp	r4, #7
 289 002e EAD9     		bls	.L24
 163:Src/ssd1306.c ****     }
 164:Src/ssd1306.c **** }
 290              		.loc 1 164 0 is_stmt 1
 291 0030 10BD     		pop	{r4, pc}
 292              	.LVL22:
 293              	.L27:
 294 0032 00BF     		.align	2
 295              	.L26:
 296 0034 00000000 		.word	SSD1306_Buffer
 297              		.cfi_endproc
 298              	.LFE132:
 300              		.section	.text.ssd1306_Init,"ax",%progbits
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 9


 301              		.align	1
 302              		.global	ssd1306_Init
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	ssd1306_Init:
 309              	.LFB130:
  66:Src/ssd1306.c **** 	// Reset OLED
 310              		.loc 1 66 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI10:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
  71:Src/ssd1306.c ****     
 319              		.loc 1 71 0
 320 0002 6420     		movs	r0, #100
 321 0004 FFF7FEFF 		bl	HAL_Delay
 322              	.LVL23:
  74:Src/ssd1306.c **** 
 323              		.loc 1 74 0
 324 0008 AE20     		movs	r0, #174
 325 000a FFF7FEFF 		bl	ssd1306_WriteCommand
 326              	.LVL24:
  76:Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 327              		.loc 1 76 0
 328 000e 2020     		movs	r0, #32
 329 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 330              	.LVL25:
  77:Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 331              		.loc 1 77 0
 332 0014 0020     		movs	r0, #0
 333 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 334              	.LVL26:
  80:Src/ssd1306.c **** 
 335              		.loc 1 80 0
 336 001a B020     		movs	r0, #176
 337 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 338              	.LVL27:
  85:Src/ssd1306.c **** #endif
 339              		.loc 1 85 0
 340 0020 C820     		movs	r0, #200
 341 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 342              	.LVL28:
  88:Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 343              		.loc 1 88 0
 344 0026 0020     		movs	r0, #0
 345 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 346              	.LVL29:
  89:Src/ssd1306.c **** 
 347              		.loc 1 89 0
 348 002c 1020     		movs	r0, #16
 349 002e FFF7FEFF 		bl	ssd1306_WriteCommand
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 10


 350              	.LVL30:
  91:Src/ssd1306.c **** 
 351              		.loc 1 91 0
 352 0032 4020     		movs	r0, #64
 353 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 354              	.LVL31:
  93:Src/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 355              		.loc 1 93 0
 356 0038 8120     		movs	r0, #129
 357 003a FFF7FEFF 		bl	ssd1306_WriteCommand
 358              	.LVL32:
  94:Src/ssd1306.c **** 
 359              		.loc 1 94 0
 360 003e FF20     		movs	r0, #255
 361 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 362              	.LVL33:
  99:Src/ssd1306.c **** #endif
 363              		.loc 1 99 0
 364 0044 A120     		movs	r0, #161
 365 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 366              	.LVL34:
 105:Src/ssd1306.c **** #endif
 367              		.loc 1 105 0
 368 004a A620     		movs	r0, #166
 369 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 370              	.LVL35:
 108:Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 371              		.loc 1 108 0
 372 0050 A820     		movs	r0, #168
 373 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 374              	.LVL36:
 109:Src/ssd1306.c **** 
 375              		.loc 1 109 0
 376 0056 3F20     		movs	r0, #63
 377 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 378              	.LVL37:
 111:Src/ssd1306.c **** 
 379              		.loc 1 111 0
 380 005c A420     		movs	r0, #164
 381 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 382              	.LVL38:
 113:Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 383              		.loc 1 113 0
 384 0062 D320     		movs	r0, #211
 385 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 386              	.LVL39:
 114:Src/ssd1306.c **** 
 387              		.loc 1 114 0
 388 0068 0020     		movs	r0, #0
 389 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 390              	.LVL40:
 116:Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 391              		.loc 1 116 0
 392 006e D520     		movs	r0, #213
 393 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 394              	.LVL41:
 117:Src/ssd1306.c **** 
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 11


 395              		.loc 1 117 0
 396 0074 F020     		movs	r0, #240
 397 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 398              	.LVL42:
 119:Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 399              		.loc 1 119 0
 400 007a D920     		movs	r0, #217
 401 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 402              	.LVL43:
 120:Src/ssd1306.c **** 
 403              		.loc 1 120 0
 404 0080 2220     		movs	r0, #34
 405 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 406              	.LVL44:
 122:Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 407              		.loc 1 122 0
 408 0086 DA20     		movs	r0, #218
 409 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 410              	.LVL45:
 123:Src/ssd1306.c **** 
 411              		.loc 1 123 0
 412 008c 1220     		movs	r0, #18
 413 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 414              	.LVL46:
 125:Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //0x20,0.77xVcc
 415              		.loc 1 125 0
 416 0092 DB20     		movs	r0, #219
 417 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 418              	.LVL47:
 126:Src/ssd1306.c **** 
 419              		.loc 1 126 0
 420 0098 1020     		movs	r0, #16
 421 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 422              	.LVL48:
 128:Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 423              		.loc 1 128 0
 424 009e 8D20     		movs	r0, #141
 425 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 426              	.LVL49:
 129:Src/ssd1306.c ****     ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 427              		.loc 1 129 0
 428 00a4 1420     		movs	r0, #20
 429 00a6 FFF7FEFF 		bl	ssd1306_WriteCommand
 430              	.LVL50:
 130:Src/ssd1306.c **** 
 431              		.loc 1 130 0
 432 00aa AF20     		movs	r0, #175
 433 00ac FFF7FEFF 		bl	ssd1306_WriteCommand
 434              	.LVL51:
 133:Src/ssd1306.c ****     
 435              		.loc 1 133 0
 436 00b0 0020     		movs	r0, #0
 437 00b2 FFF7FEFF 		bl	ssd1306_Fill
 438              	.LVL52:
 136:Src/ssd1306.c ****     
 439              		.loc 1 136 0
 440 00b6 FFF7FEFF 		bl	ssd1306_UpdateScreen
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 12


 441              	.LVL53:
 139:Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 442              		.loc 1 139 0
 443 00ba 034B     		ldr	r3, .L30
 444 00bc 0022     		movs	r2, #0
 445 00be 1A80     		strh	r2, [r3]	@ movhi
 140:Src/ssd1306.c ****     
 446              		.loc 1 140 0
 447 00c0 5A80     		strh	r2, [r3, #2]	@ movhi
 142:Src/ssd1306.c **** }
 448              		.loc 1 142 0
 449 00c2 0122     		movs	r2, #1
 450 00c4 5A71     		strb	r2, [r3, #5]
 143:Src/ssd1306.c **** 
 451              		.loc 1 143 0
 452 00c6 08BD     		pop	{r3, pc}
 453              	.L31:
 454              		.align	2
 455              	.L30:
 456 00c8 00000000 		.word	SSD1306
 457              		.cfi_endproc
 458              	.LFE130:
 460              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 461              		.align	1
 462              		.global	ssd1306_DrawPixel
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	ssd1306_DrawPixel:
 469              	.LFB133:
 165:Src/ssd1306.c **** 
 166:Src/ssd1306.c **** //    Draw one pixel in the screenbuffer
 167:Src/ssd1306.c **** //    X => X Coordinate
 168:Src/ssd1306.c **** //    Y => Y Coordinate
 169:Src/ssd1306.c **** //    color => Pixel color
 170:Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 470              		.loc 1 170 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL54:
 171:Src/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 476              		.loc 1 171 0
 477 0000 10F0800F 		tst	r0, #128
 478 0004 15D1     		bne	.L32
 479              		.loc 1 171 0 is_stmt 0 discriminator 1
 480 0006 3F29     		cmp	r1, #63
 481 0008 13D8     		bhi	.L32
 172:Src/ssd1306.c ****         // Don't write outside the buffer
 173:Src/ssd1306.c ****         return;
 174:Src/ssd1306.c ****     }
 175:Src/ssd1306.c ****     
 176:Src/ssd1306.c ****     // Check if pixel should be inverted
 177:Src/ssd1306.c ****     if(SSD1306.Inverted) {
 482              		.loc 1 177 0 is_stmt 1
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 13


 483 000a 104B     		ldr	r3, .L37
 484 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 485 000e 13B1     		cbz	r3, .L34
 178:Src/ssd1306.c ****         color = (SSD1306_COLOR)!color;
 486              		.loc 1 178 0
 487 0010 B2FA82F2 		clz	r2, r2
 488              	.LVL55:
 489 0014 5209     		lsrs	r2, r2, #5
 490              	.LVL56:
 491              	.L34:
 179:Src/ssd1306.c ****     }
 180:Src/ssd1306.c ****     
 181:Src/ssd1306.c ****     // Draw in the right color
 182:Src/ssd1306.c ****     if(color == White) {
 492              		.loc 1 182 0
 493 0016 012A     		cmp	r2, #1
 494 0018 0CD0     		beq	.L36
 183:Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 184:Src/ssd1306.c ****     } else { 
 185:Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 495              		.loc 1 185 0
 496 001a CB08     		lsrs	r3, r1, #3
 497 001c 00EBC310 		add	r0, r0, r3, lsl #7
 498              	.LVL57:
 499 0020 01F00701 		and	r1, r1, #7
 500              	.LVL58:
 501 0024 0123     		movs	r3, #1
 502 0026 8B40     		lsls	r3, r3, r1
 503 0028 094A     		ldr	r2, .L37+4
 504              	.LVL59:
 505 002a 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 506 002c 21EA0301 		bic	r1, r1, r3
 507 0030 1154     		strb	r1, [r2, r0]
 508              	.L32:
 186:Src/ssd1306.c ****     }
 187:Src/ssd1306.c **** }
 509              		.loc 1 187 0
 510 0032 7047     		bx	lr
 511              	.LVL60:
 512              	.L36:
 183:Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 513              		.loc 1 183 0
 514 0034 CB08     		lsrs	r3, r1, #3
 515 0036 00EBC310 		add	r0, r0, r3, lsl #7
 516              	.LVL61:
 517 003a 01F00701 		and	r1, r1, #7
 518              	.LVL62:
 519 003e 0123     		movs	r3, #1
 520 0040 8B40     		lsls	r3, r3, r1
 521 0042 034A     		ldr	r2, .L37+4
 522              	.LVL63:
 523 0044 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 524 0046 1943     		orrs	r1, r1, r3
 525 0048 1154     		strb	r1, [r2, r0]
 526 004a 7047     		bx	lr
 527              	.L38:
 528              		.align	2
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 14


 529              	.L37:
 530 004c 00000000 		.word	SSD1306
 531 0050 00000000 		.word	SSD1306_Buffer
 532              		.cfi_endproc
 533              	.LFE133:
 535              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 536              		.align	1
 537              		.global	ssd1306_WriteChar
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu fpv4-sp-d16
 543              	ssd1306_WriteChar:
 544              	.LFB134:
 188:Src/ssd1306.c **** 
 189:Src/ssd1306.c **** // Draw 1 char to the screen buffer
 190:Src/ssd1306.c **** // ch       => char om weg te schrijven
 191:Src/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 192:Src/ssd1306.c **** // color    => Black or White
 193:Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 545              		.loc 1 193 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 8
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL64:
 550 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 551              	.LCFI11:
 552              		.cfi_def_cfa_offset 28
 553              		.cfi_offset 4, -28
 554              		.cfi_offset 5, -24
 555              		.cfi_offset 6, -20
 556              		.cfi_offset 7, -16
 557              		.cfi_offset 8, -12
 558              		.cfi_offset 9, -8
 559              		.cfi_offset 14, -4
 560 0004 83B0     		sub	sp, sp, #12
 561              	.LCFI12:
 562              		.cfi_def_cfa_offset 40
 563 0006 02AC     		add	r4, sp, #8
 564 0008 04E90600 		stmdb	r4, {r1, r2}
 194:Src/ssd1306.c ****     uint32_t i, b, j;
 195:Src/ssd1306.c ****     
 196:Src/ssd1306.c ****     // Check if character is valid
 197:Src/ssd1306.c ****     if (ch < 32 || ch > 126)
 565              		.loc 1 197 0
 566 000c A0F12002 		sub	r2, r0, #32
 567 0010 D2B2     		uxtb	r2, r2
 568 0012 5E2A     		cmp	r2, #94
 569 0014 4ED8     		bhi	.L49
 198:Src/ssd1306.c ****         return 0;
 199:Src/ssd1306.c ****     
 200:Src/ssd1306.c ****     // Check remaining space on current line
 201:Src/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.width) ||
 570              		.loc 1 201 0
 571 0016 284A     		ldr	r2, .L53
 572 0018 1288     		ldrh	r2, [r2]
 573 001a 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 15


 574 001e 3244     		add	r2, r2, r6
 575 0020 802A     		cmp	r2, #128
 576 0022 06DC     		bgt	.L41
 202:Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.height))
 577              		.loc 1 202 0 discriminator 1
 578 0024 244A     		ldr	r2, .L53
 579 0026 5288     		ldrh	r2, [r2, #2]
 580 0028 9DF80110 		ldrb	r1, [sp, #1]	@ zero_extendqisi2
 581 002c 0A44     		add	r2, r2, r1
 201:Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.height))
 582              		.loc 1 201 0 discriminator 1
 583 002e 402A     		cmp	r2, #64
 584 0030 07DD     		ble	.L42
 585              	.L41:
 203:Src/ssd1306.c ****     {
 204:Src/ssd1306.c ****         SSD1306.CurrentY += Font.height;
 586              		.loc 1 204 0
 587 0032 9DF80110 		ldrb	r1, [sp, #1]	@ zero_extendqisi2
 588 0036 204A     		ldr	r2, .L53
 589 0038 5488     		ldrh	r4, [r2, #2]
 590 003a 2144     		add	r1, r1, r4
 591 003c 5180     		strh	r1, [r2, #2]	@ movhi
 205:Src/ssd1306.c ****         SSD1306.CurrentX = 2;
 592              		.loc 1 205 0
 593 003e 0221     		movs	r1, #2
 594 0040 1180     		strh	r1, [r2]	@ movhi
 595              	.L42:
 596 0042 9846     		mov	r8, r3
 597 0044 8146     		mov	r9, r0
 206:Src/ssd1306.c **** 
 207:Src/ssd1306.c ****     }
 208:Src/ssd1306.c ****     
 209:Src/ssd1306.c ****     // Use the font to write
 210:Src/ssd1306.c ****     for(i = 0; i < Font.height; i++) {
 211:Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.height + i];
 212:Src/ssd1306.c ****         for(j = 0; j < Font.width; j++) {
 598              		.loc 1 212 0 discriminator 1
 599 0046 0025     		movs	r5, #0
 600 0048 1FE0     		b	.L43
 601              	.LVL65:
 602              	.L45:
 213:Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 214:Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 215:Src/ssd1306.c ****             } else {
 216:Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 603              		.loc 1 216 0
 604 004a 1B4B     		ldr	r3, .L53
 605 004c 1888     		ldrh	r0, [r3]
 606 004e 5988     		ldrh	r1, [r3, #2]
 607 0050 2944     		add	r1, r1, r5
 608 0052 2044     		add	r0, r0, r4
 609 0054 B8FA88F2 		clz	r2, r8
 610 0058 5209     		lsrs	r2, r2, #5
 611 005a C9B2     		uxtb	r1, r1
 612 005c C0B2     		uxtb	r0, r0
 613 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 614              	.LVL66:
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 16


 615              	.L46:
 212:Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 616              		.loc 1 212 0 discriminator 2
 617 0062 0134     		adds	r4, r4, #1
 618              	.LVL67:
 619              	.L44:
 212:Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 620              		.loc 1 212 0 is_stmt 0 discriminator 1
 621 0064 A642     		cmp	r6, r4
 622 0066 0FD9     		bls	.L51
 213:Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 623              		.loc 1 213 0 is_stmt 1
 624 0068 07FA04F3 		lsl	r3, r7, r4
 625 006c 13F4004F 		tst	r3, #32768
 626 0070 EBD0     		beq	.L45
 214:Src/ssd1306.c ****             } else {
 627              		.loc 1 214 0
 628 0072 114B     		ldr	r3, .L53
 629 0074 1888     		ldrh	r0, [r3]
 630 0076 5988     		ldrh	r1, [r3, #2]
 631 0078 2944     		add	r1, r1, r5
 632 007a 2044     		add	r0, r0, r4
 633 007c 4246     		mov	r2, r8
 634 007e C9B2     		uxtb	r1, r1
 635 0080 C0B2     		uxtb	r0, r0
 636 0082 FFF7FEFF 		bl	ssd1306_DrawPixel
 637              	.LVL68:
 638 0086 ECE7     		b	.L46
 639              	.L51:
 210:Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.height + i];
 640              		.loc 1 210 0 discriminator 2
 641 0088 0135     		adds	r5, r5, #1
 642              	.LVL69:
 643              	.L43:
 210:Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.height + i];
 644              		.loc 1 210 0 is_stmt 0 discriminator 1
 645 008a 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 646 008e AA42     		cmp	r2, r5
 647 0090 08D9     		bls	.L52
 211:Src/ssd1306.c ****         for(j = 0; j < Font.width; j++) {
 648              		.loc 1 211 0 is_stmt 1
 649 0092 A9F12003 		sub	r3, r9, #32
 650 0096 02FB0353 		mla	r3, r2, r3, r5
 651 009a 019A     		ldr	r2, [sp, #4]
 652 009c 32F81370 		ldrh	r7, [r2, r3, lsl #1]
 653              	.LVL70:
 212:Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 654              		.loc 1 212 0
 655 00a0 0024     		movs	r4, #0
 656 00a2 DFE7     		b	.L44
 657              	.LVL71:
 658              	.L52:
 217:Src/ssd1306.c ****             }
 218:Src/ssd1306.c ****         }
 219:Src/ssd1306.c ****     }
 220:Src/ssd1306.c ****     
 221:Src/ssd1306.c ****     // The current space is now taken
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 17


 222:Src/ssd1306.c ****     SSD1306.CurrentX += Font.width;
 659              		.loc 1 222 0
 660 00a4 044B     		ldr	r3, .L53
 661 00a6 1A88     		ldrh	r2, [r3]
 662 00a8 1644     		add	r6, r6, r2
 663 00aa 1E80     		strh	r6, [r3]	@ movhi
 223:Src/ssd1306.c ****     
 224:Src/ssd1306.c ****     // Return written char for validation
 225:Src/ssd1306.c ****     return ch;
 664              		.loc 1 225 0
 665 00ac 4846     		mov	r0, r9
 666              	.LVL72:
 667              	.L40:
 226:Src/ssd1306.c **** }
 668              		.loc 1 226 0
 669 00ae 03B0     		add	sp, sp, #12
 670              	.LCFI13:
 671              		.cfi_remember_state
 672              		.cfi_def_cfa_offset 28
 673              		@ sp needed
 674 00b0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 675              	.LVL73:
 676              	.L49:
 677              	.LCFI14:
 678              		.cfi_restore_state
 198:Src/ssd1306.c ****     
 679              		.loc 1 198 0
 680 00b4 0020     		movs	r0, #0
 681              	.LVL74:
 682 00b6 FAE7     		b	.L40
 683              	.L54:
 684              		.align	2
 685              	.L53:
 686 00b8 00000000 		.word	SSD1306
 687              		.cfi_endproc
 688              	.LFE134:
 690              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 691              		.align	1
 692              		.global	ssd1306_SetCursor
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	ssd1306_SetCursor:
 699              	.LFB136:
 227:Src/ssd1306.c **** 
 228:Src/ssd1306.c **** // Write full string to screenbuffer
 229:Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color,int x,int y) {
 230:Src/ssd1306.c ****   ssd1306_SetCursor(x,y);
 231:Src/ssd1306.c ****     // Write until null-byte
 232:Src/ssd1306.c ****     while (*str) {
 233:Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 234:Src/ssd1306.c ****             // Char could not be written
 235:Src/ssd1306.c ****             return *str;
 236:Src/ssd1306.c ****         }
 237:Src/ssd1306.c ****         
 238:Src/ssd1306.c ****         // Next char
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 18


 239:Src/ssd1306.c ****         str++;
 240:Src/ssd1306.c ****     }
 241:Src/ssd1306.c ****     // Everything ok
 242:Src/ssd1306.c ****     return *str;
 243:Src/ssd1306.c **** }
 244:Src/ssd1306.c **** 
 245:Src/ssd1306.c **** // Position the cursor
 246:Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 700              		.loc 1 246 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL75:
 247:Src/ssd1306.c ****     SSD1306.CurrentX = x;
 706              		.loc 1 247 0
 707 0000 014B     		ldr	r3, .L56
 708 0002 1880     		strh	r0, [r3]	@ movhi
 248:Src/ssd1306.c ****     SSD1306.CurrentY = y;
 709              		.loc 1 248 0
 710 0004 5980     		strh	r1, [r3, #2]	@ movhi
 249:Src/ssd1306.c **** }
 711              		.loc 1 249 0
 712 0006 7047     		bx	lr
 713              	.L57:
 714              		.align	2
 715              	.L56:
 716 0008 00000000 		.word	SSD1306
 717              		.cfi_endproc
 718              	.LFE136:
 720              		.section	.text.ssd1306_WriteString,"ax",%progbits
 721              		.align	1
 722              		.global	ssd1306_WriteString
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
 728              	ssd1306_WriteString:
 729              	.LFB135:
 229:Src/ssd1306.c ****   ssd1306_SetCursor(x,y);
 730              		.loc 1 229 0
 731              		.cfi_startproc
 732              		@ args = 8, pretend = 0, frame = 8
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              	.LVL76:
 735 0000 70B5     		push	{r4, r5, r6, lr}
 736              	.LCFI15:
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 4, -16
 739              		.cfi_offset 5, -12
 740              		.cfi_offset 6, -8
 741              		.cfi_offset 14, -4
 742 0002 82B0     		sub	sp, sp, #8
 743              	.LCFI16:
 744              		.cfi_def_cfa_offset 24
 745 0004 0546     		mov	r5, r0
 746 0006 02A8     		add	r0, sp, #8
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 19


 747              	.LVL77:
 748 0008 00E90600 		stmdb	r0, {r1, r2}
 749 000c 1E46     		mov	r6, r3
 230:Src/ssd1306.c ****     // Write until null-byte
 750              		.loc 1 230 0
 751 000e 9DF81C10 		ldrb	r1, [sp, #28]	@ zero_extendqisi2
 752 0012 9DF81800 		ldrb	r0, [sp, #24]	@ zero_extendqisi2
 753 0016 FFF7FEFF 		bl	ssd1306_SetCursor
 754              	.LVL78:
 755              	.L59:
 232:Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 756              		.loc 1 232 0
 757 001a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 758 001c 5CB1     		cbz	r4, .L60
 233:Src/ssd1306.c ****             // Char could not be written
 759              		.loc 1 233 0
 760 001e 3346     		mov	r3, r6
 761 0020 02AA     		add	r2, sp, #8
 762 0022 12E90600 		ldmdb	r2, {r1, r2}
 763 0026 2046     		mov	r0, r4
 764 0028 FFF7FEFF 		bl	ssd1306_WriteChar
 765              	.LVL79:
 766 002c 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 767 002e A042     		cmp	r0, r4
 768 0030 01D1     		bne	.L60
 239:Src/ssd1306.c ****     }
 769              		.loc 1 239 0
 770 0032 0135     		adds	r5, r5, #1
 771              	.LVL80:
 772 0034 F1E7     		b	.L59
 773              	.L60:
 243:Src/ssd1306.c **** 
 774              		.loc 1 243 0
 775 0036 2046     		mov	r0, r4
 776 0038 02B0     		add	sp, sp, #8
 777              	.LCFI17:
 778              		.cfi_def_cfa_offset 16
 779              		@ sp needed
 780 003a 70BD     		pop	{r4, r5, r6, pc}
 781              		.cfi_endproc
 782              	.LFE135:
 784              		.section	.text.ssd1306_DrawLine,"ax",%progbits
 785              		.align	1
 786              		.global	ssd1306_DrawLine
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu fpv4-sp-d16
 792              	ssd1306_DrawLine:
 793              	.LFB137:
 250:Src/ssd1306.c **** 
 251:Src/ssd1306.c **** void ssd1306_DrawLine(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, SSD1306_COLOR color)
 252:Src/ssd1306.c **** {
 794              		.loc 1 252 0
 795              		.cfi_startproc
 796              		@ args = 4, pretend = 0, frame = 16
 797              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 20


 798              	.LVL81:
 799 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 800              	.LCFI18:
 801              		.cfi_def_cfa_offset 36
 802              		.cfi_offset 4, -36
 803              		.cfi_offset 5, -32
 804              		.cfi_offset 6, -28
 805              		.cfi_offset 7, -24
 806              		.cfi_offset 8, -20
 807              		.cfi_offset 9, -16
 808              		.cfi_offset 10, -12
 809              		.cfi_offset 11, -8
 810              		.cfi_offset 14, -4
 811 0004 85B0     		sub	sp, sp, #20
 812              	.LCFI19:
 813              		.cfi_def_cfa_offset 56
 814 0006 9DF83840 		ldrb	r4, [sp, #56]	@ zero_extendqisi2
 815 000a 0194     		str	r4, [sp, #4]
 816              	.LVL82:
 253:Src/ssd1306.c **** 	uint16_t t;
 254:Src/ssd1306.c **** 	int xerr = 0, yerr = 0, delta_x, delta_y, distance;
 255:Src/ssd1306.c **** 	int incx, incy, uRow, uCol;
 256:Src/ssd1306.c **** 
 257:Src/ssd1306.c **** 	delta_x = x2 - x1;
 817              		.loc 1 257 0
 818 000c 8246     		mov	r10, r0
 819 000e A2EB0008 		sub	r8, r2, r0
 820              	.LVL83:
 258:Src/ssd1306.c **** 	delta_y = y2 - y1;
 821              		.loc 1 258 0
 822 0012 8B46     		mov	fp, r1
 823 0014 A3EB0109 		sub	r9, r3, r1
 824              	.LVL84:
 259:Src/ssd1306.c **** 
 260:Src/ssd1306.c **** 	uRow = x1;
 261:Src/ssd1306.c **** 	uCol = y1;
 262:Src/ssd1306.c **** 
 263:Src/ssd1306.c **** 	if (delta_x > 0)
 825              		.loc 1 263 0
 826 0018 B8F1000F 		cmp	r8, #0
 827 001c 0DDD     		ble	.L77
 264:Src/ssd1306.c **** 		incx = 1;
 828              		.loc 1 264 0
 829 001e 0123     		movs	r3, #1
 830              	.LVL85:
 831 0020 0293     		str	r3, [sp, #8]
 832              	.L64:
 833              	.LVL86:
 265:Src/ssd1306.c **** 	else if (delta_x == 0)
 266:Src/ssd1306.c **** 		incx = 0;
 267:Src/ssd1306.c **** 	else {
 268:Src/ssd1306.c **** 		incx = -1;
 269:Src/ssd1306.c **** 		delta_x = -delta_x;
 270:Src/ssd1306.c **** 	}
 271:Src/ssd1306.c **** 
 272:Src/ssd1306.c **** 	if (delta_y > 0)
 834              		.loc 1 272 0
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 21


 835 0022 B9F1000F 		cmp	r9, #0
 836 0026 14DD     		ble	.L78
 273:Src/ssd1306.c **** 		incy = 1;
 837              		.loc 1 273 0
 838 0028 0123     		movs	r3, #1
 839 002a 0393     		str	r3, [sp, #12]
 840              	.L65:
 841              	.LVL87:
 274:Src/ssd1306.c **** 	else if (delta_y == 0)
 275:Src/ssd1306.c **** 		incy = 0;
 276:Src/ssd1306.c **** 	else {
 277:Src/ssd1306.c **** 		incy = -1;
 278:Src/ssd1306.c **** 		delta_y = -delta_x;
 279:Src/ssd1306.c **** 	}
 280:Src/ssd1306.c **** 	if (delta_x > delta_y)
 842              		.loc 1 280 0
 843 002c C845     		cmp	r8, r9
 844 002e 1CDD     		ble	.L75
 281:Src/ssd1306.c **** 		distance = delta_x;
 845              		.loc 1 281 0
 846 0030 4646     		mov	r6, r8
 847              	.L66:
 848              	.LVL88:
 254:Src/ssd1306.c **** 	int incx, incy, uRow, uCol;
 849              		.loc 1 254 0
 850 0032 0025     		movs	r5, #0
 851 0034 2F46     		mov	r7, r5
 282:Src/ssd1306.c **** 	else
 283:Src/ssd1306.c **** 		distance = delta_y;
 284:Src/ssd1306.c **** 
 285:Src/ssd1306.c **** 	for (t = 0; t <= distance; t++) {
 852              		.loc 1 285 0
 853 0036 2C46     		mov	r4, r5
 854 0038 1BE0     		b	.L67
 855              	.LVL89:
 856              	.L77:
 265:Src/ssd1306.c **** 		incx = 0;
 857              		.loc 1 265 0
 858 003a B8F1000F 		cmp	r8, #0
 859 003e 05D0     		beq	.L72
 860              	.LVL90:
 269:Src/ssd1306.c **** 	}
 861              		.loc 1 269 0
 862 0040 C8F10008 		rsb	r8, r8, #0
 863              	.LVL91:
 268:Src/ssd1306.c **** 		delta_x = -delta_x;
 864              		.loc 1 268 0
 865 0044 4FF0FF33 		mov	r3, #-1
 866              	.LVL92:
 867 0048 0293     		str	r3, [sp, #8]
 868 004a EAE7     		b	.L64
 869              	.LVL93:
 870              	.L72:
 266:Src/ssd1306.c **** 	else {
 871              		.loc 1 266 0
 872 004c CDF80880 		str	r8, [sp, #8]
 873 0050 E7E7     		b	.L64
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 22


 874              	.LVL94:
 875              	.L78:
 274:Src/ssd1306.c **** 		incy = 0;
 876              		.loc 1 274 0
 877 0052 B9F1000F 		cmp	r9, #0
 878 0056 05D0     		beq	.L74
 879              	.LVL95:
 278:Src/ssd1306.c **** 	}
 880              		.loc 1 278 0
 881 0058 C8F10009 		rsb	r9, r8, #0
 882              	.LVL96:
 277:Src/ssd1306.c **** 		delta_y = -delta_x;
 883              		.loc 1 277 0
 884 005c 4FF0FF33 		mov	r3, #-1
 885 0060 0393     		str	r3, [sp, #12]
 886 0062 E3E7     		b	.L65
 887              	.LVL97:
 888              	.L74:
 275:Src/ssd1306.c **** 	else {
 889              		.loc 1 275 0
 890 0064 CDF80C90 		str	r9, [sp, #12]
 891 0068 E0E7     		b	.L65
 892              	.LVL98:
 893              	.L75:
 283:Src/ssd1306.c **** 
 894              		.loc 1 283 0
 895 006a 4E46     		mov	r6, r9
 896 006c E1E7     		b	.L66
 897              	.LVL99:
 898              	.L69:
 899              		.loc 1 285 0 discriminator 2
 900 006e 0134     		adds	r4, r4, #1
 901              	.LVL100:
 902 0070 A4B2     		uxth	r4, r4
 903              	.LVL101:
 904              	.L67:
 905              		.loc 1 285 0 is_stmt 0 discriminator 1
 906 0072 B442     		cmp	r4, r6
 907 0074 13DC     		bgt	.L79
 286:Src/ssd1306.c **** 		ssd1306_DrawPixel(uRow, uCol, color);
 908              		.loc 1 286 0 is_stmt 1
 909 0076 019A     		ldr	r2, [sp, #4]
 910 0078 5FFA8BF1 		uxtb	r1, fp
 911 007c 5FFA8AF0 		uxtb	r0, r10
 912 0080 FFF7FEFF 		bl	ssd1306_DrawPixel
 913              	.LVL102:
 287:Src/ssd1306.c **** 		xerr += delta_x;
 914              		.loc 1 287 0
 915 0084 4744     		add	r7, r7, r8
 916              	.LVL103:
 288:Src/ssd1306.c **** 		yerr += delta_y;
 917              		.loc 1 288 0
 918 0086 4D44     		add	r5, r5, r9
 919              	.LVL104:
 289:Src/ssd1306.c **** 		if (xerr > distance) {
 920              		.loc 1 289 0
 921 0088 BE42     		cmp	r6, r7
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 23


 922 008a 02DA     		bge	.L68
 290:Src/ssd1306.c **** 			xerr -= distance;
 923              		.loc 1 290 0
 924 008c BF1B     		subs	r7, r7, r6
 925              	.LVL105:
 291:Src/ssd1306.c **** 			uRow += incx;
 926              		.loc 1 291 0
 927 008e 029B     		ldr	r3, [sp, #8]
 928 0090 9A44     		add	r10, r10, r3
 929              	.LVL106:
 930              	.L68:
 292:Src/ssd1306.c **** 		}
 293:Src/ssd1306.c **** 		if (yerr > distance) {
 931              		.loc 1 293 0
 932 0092 AE42     		cmp	r6, r5
 933 0094 EBDA     		bge	.L69
 294:Src/ssd1306.c **** 			yerr -= distance;
 934              		.loc 1 294 0
 935 0096 AD1B     		subs	r5, r5, r6
 936              	.LVL107:
 295:Src/ssd1306.c **** 			uCol += incy;
 937              		.loc 1 295 0
 938 0098 039B     		ldr	r3, [sp, #12]
 939 009a 9B44     		add	fp, fp, r3
 940              	.LVL108:
 941 009c E7E7     		b	.L69
 942              	.L79:
 296:Src/ssd1306.c **** 		}
 297:Src/ssd1306.c **** 	}
 298:Src/ssd1306.c **** }...
 943              		.loc 1 298 0
 944 009e 05B0     		add	sp, sp, #20
 945              	.LCFI20:
 946              		.cfi_def_cfa_offset 36
 947              		@ sp needed
 948 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 949              		.cfi_endproc
 950              	.LFE137:
 952              		.comm	SSD1306,6,4
 953              		.comm	SSD1306_Buffer,1024,4
 954              		.text
 955              	.Letext0:
 956              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/lib/gcc/arm-none-eabi/7.3.1/incl
 957              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/machine/_d
 958              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_stdin
 959              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 960              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 961              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 962              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/lock.h
 963              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/_types
 964              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/7-2018-q2-update/gcc/arm-none-eabi/include/sys/reent
 965              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 966              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 967              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 968              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 969              		.file 15 "Inc/ips_font.h"
 970              		.file 16 "Inc/ssd1306.h"
ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 24


ARM GAS  /var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:18     .text.ssd1306_Reset:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:25     .text.ssd1306_Reset:0000000000000000 ssd1306_Reset
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:39     .text.ssd1306_WriteCommand:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:46     .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:83     .text.ssd1306_WriteCommand:0000000000000028 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:88     .text.ssd1306_WriteMultipleCommand:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:95     .text.ssd1306_WriteMultipleCommand:0000000000000000 ssd1306_WriteMultipleCommand
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:132    .text.ssd1306_WriteMultipleCommand:0000000000000024 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:137    .text.ssd1306_WriteData:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:144    .text.ssd1306_WriteData:0000000000000000 ssd1306_WriteData
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:181    .text.ssd1306_WriteData:0000000000000024 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:186    .text.ssd1306_Fill:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:193    .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:230    .text.ssd1306_Fill:000000000000001c $d
                            *COM*:0000000000000400 SSD1306_Buffer
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:235    .text.ssd1306_UpdateScreen:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:242    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:296    .text.ssd1306_UpdateScreen:0000000000000034 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:301    .text.ssd1306_Init:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:308    .text.ssd1306_Init:0000000000000000 ssd1306_Init
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:456    .text.ssd1306_Init:00000000000000c8 $d
                            *COM*:0000000000000006 SSD1306
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:461    .text.ssd1306_DrawPixel:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:468    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:530    .text.ssd1306_DrawPixel:000000000000004c $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:536    .text.ssd1306_WriteChar:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:543    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:686    .text.ssd1306_WriteChar:00000000000000b8 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:691    .text.ssd1306_SetCursor:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:698    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:716    .text.ssd1306_SetCursor:0000000000000008 $d
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:721    .text.ssd1306_WriteString:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:728    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:785    .text.ssd1306_DrawLine:0000000000000000 $t
/var/folders/k_/r2bh2pj93_jff4n9gmtn9jvr0000gn/T//ccomCUoV.s:792    .text.ssd1306_DrawLine:0000000000000000 ssd1306_DrawLine

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
